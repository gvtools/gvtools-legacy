#!/bin/sh
############################################################################
#
# MODULE:    v.lda
# AUTHOR(S):	Michael Barton, Arizona State University
# PURPOSE:	Local density analysis of vector points for GRASS 6
#
# COPYRIGHT:	(C) 2005 by the GRASS Development Team
#
#		This program is free software under the GNU General Public
#		License (>=v2). Read the file COPYING that comes with GRASS
#		for details.
#
# REFERENCE:    Johnson, I. (1984). Cell frequency recording and analysis of 
#    artifact distributions. In Intrasite Spatial Analysis in Archaeology. 
#    H. J. Hietala. Cambridge, Cambridge University Press: 75-96.
#############################################################################

#%Module
#%  description: Calculates Local Density Coefficients for set of vector points
#%End
#%option
#% key: input1
#% type: string
#% gisprompt: old,vector,vector
#% description: Vector points base file
#% required : yes
#%end
#%option
#% key: input2
#% type: string
#% gisprompt: old,vector,vector
#% description: Vector points file to analyze
#% required : yes
#%end
#%option
#% key: min_r
#% type: double
#% description: Minimum neighborhood radius for local density calculations
#% required : yes
#%end
#%option
#% key: max_r
#% type: double
#% description: Maxium neighborhood radius for local density calculations
#% required : yes
#%end
#%option
#% key: step_r
#% type: double
#% description: Increments to neighborhood radius for local density calculations
#% required : yes
#%end
#%Flag
#%  key: a
#%  description: Append results to existing LDA.txt file
#%END
#%Flag
#%  key: g
#%  description: Line graph of LDA results in active monitor (only available when append mode is off)
#%END


if test "$GISBASE" = ""; then
 echo "You must be in GRASS GIS to run this program." >&2
 exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
  exec g.parser "$0" "$@"
fi


npts1=`v.info $GIS_OPT_input1 | grep "Number of points:" | awk '{print $5}'`
npts2=`v.info $GIS_OPT_input2 | grep "Number of points:" | awk '{print $5}'`
ns_extent=`g.region -e | grep "south extent:" | awk '{print $4}'`
ew_extent=`g.region -e | grep "west  extent:" | awk '{print $4}'`
area=`echo $ns_extent $ew_extent | awk '{print $1 * $2}'`
totalpts=`expr $npts1 \* $npts2`
radius=$GIS_OPT_min_r
temp1=`g.tempfile pid=$$`

if [ "$GIS_FLAG_a" = 1 ]; then
    GIS_FLAG_g=0    
fi


# Set up text file for LDA output
if [ "$GIS_flag_a" = 1 ]; then
    echo "Local Density Analysis of "$GIS_OPT_input2" in neighborhood of "$GIS_OPT_input1>>LDA.txt
else
    echo "Local Density Analysis of "$GIS_OPT_input2" in neighborhood of "$GIS_OPT_input1>LDA.txt
fi
    
echo " " >> LDA.tx
echo "radius" "observed" "expected" "LDA" | awk '{print $1 "\t" $2 "\t" $3 "\t" $4}' >> LDA.txt
echo "======" "========" "========" "===" | awk '{print $1 "\t" $2 "\t" $3 "\t" $4}' >> LDA.txt

# Calculate LDA coefficients for each neighborhood radius
until [ "$radius" -ge "$GIS_OPT_max_r" ] ; do
	expected=`echo $totalpts $radius $area | awk '{print $1 * ((3.1416 * $2^2) / $3)}'`
    v.distance from=$GIS_OPT_input1 to=$GIS_OPT_input2 column=temp upload=dist dmax=$radius -pa > $temp1
    observed=`grep -cv '|0.000000' $temp1`
	LDA=`echo $observed $expected | awk '{print $1 / $2}'`
	echo $radius $observed $expected $LDA | awk '{print $1 "\t" $2 "\t" $3 "\t" $4}' >> LDA.txt
	radius=`echo $radius $GIS_OPT_step_r | awk '{print $1 + $2}'`
done

echo "**********************************************************">>LDA.txt
echo " ">>LDA.txt

# Display LDA results in output window
echo " "
echo "*************************"
echo "Local density coefficients have been written to the file"
echo "LDA.txt in your home directory (~/LDA.txt) and are displayed below"
echo "*************************"
echo ""
cat LDA.txt

if [ "$GIS_FLAG_g" = 1 ]; then
    d.erase white
    grep [0-9] ~/LDA.txt | awk '{print $1}' > ~/temp_x
    grep [0-9] ~/LDA.txt | awk '{print $4}' > ~/temp_y
    d.linegraph x_file=temp_x y_file=temp_y x_title="neighborhood radius" y_title="local density coeffient" title="LDA of "$GIS_OPT_input2 title_color=black y_color=blue
    rm ~/temp_x
    rm ~/temp_y
fi

# cleanup
rm $temp1
