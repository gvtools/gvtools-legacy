#!/bin/sh

############################################################################
#
# MODULE:       r.center
# AUTHOR(S):    Benjamin Ducke <benjamin.ducke AT oadigital.net>
# PURPOSE:      Centers input data distribution at a user-defined value.
#
# USAGE:	By default, the distribution is centered by shifting
#		it so that the mean comes to lie at "0.0". Alternatively,
#		the distribution may be centered on the median, mode 
#		or any user-defined value (use option "on=" to choose).
#		In the latter case, a "value=" to center on should also
#		be specified ("0.0" by default).
#		
# COPYRIGHT:    (C) 2010 by Benjamin Ducke
#
#               This program is free software under the GNU General Public
#               License (>=v2). Read the file COPYING that comes with GRASS
#               for details.
#
#############################################################################


#%Module
#% description: Centers input data distribution at a user-defined value.
#% keywords: raster, center, focus, shift, geophysics, signals
#%End

#%Option
#% key: input
#% type: string
#% required: yes
#% multiple: no
#% key_desc: name
#% description: Name of input raster map
#% gisprompt: old,cell,raster
#%End

#%Option
#% key: output
#% type: string
#% required: yes
#% multiple: no
#% key_desc: name
#% description: Name of output raster map
#% gisprompt: new,cell,raster
#%End

#%Option
#% key: on
#% type: string
#% required: no
#% multiple: no
#% options: mean,median,mode,value
#% description: Distribution parameter on which to center the data
#% answer: mean
#%End

#%Option
#% key: value
#% type: double
#% required: no
#% multiple: no
#% description: User-defined center value
#% answer: 0.0
#%End

MODULE_NAME=r.center


if [ -z "$GISBASE" ] ; then
	echo "ERROR: You must be in GRASS GIS to run this program." 1>&2
	exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
	exec g.parser "$0" "$@"
fi

# create temporary map names
TMP_BASE="$MODULE_NAME.`echo $$`.0"
TMP_MODE="$MODULE_NAME.`echo $$`.1"

# setup temporary file
TMP_FILE="`g.tempfile pid=$$`"
if [ $? -ne 0 ] || [ -z "$TMP_FILE" ] ; then
    g.message -e "Unable to create temporary file for statistics. Aborting."
    exit 1
fi

# get statistics
g.message "Getting input data statistics..."
if [ "$GIS_OPT_ON" = "mean" ] ; then
	r.univar -g "$GIS_OPT_INPUT" > "$TMP_FILE"
	MEAN=`cat "$TMP_FILE" | awk --field-separator="=" 'BEGIN { "grep \"mean=\"" | getline } BEGIN { print $2 }'`
fi
if [ "$GIS_OPT_ON" = "median" ] ; then
	r.univar -ge "$GIS_OPT_INPUT" > "$TMP_FILE"
	MEDIAN=`cat "$TMP_FILE" | awk --field-separator="=" 'BEGIN { "grep \"median=\"" | getline } BEGIN { print $2 }'`
fi
if [ "$GIS_OPT_ON" = "mode" ] ; then
	r.mapcalc "$TMP_BASE"="1"
	r.mode base="$TMP_BASE" cover="$GIS_OPT_INPUT" output="$TMP_MODE" --o
	r.univar -g "$TMP_MODE" > "$TMP_FILE"
	MODE=`cat "$TMP_FILE" | awk --field-separator="=" 'BEGIN { "grep \"min=\"" | getline } BEGIN { print $2 }'`
fi

# Clean up already
g.message "Cleaning up..."
if [ "$GIS_OPT_ON" = "mode" ] ; then
	g.remove --quiet rast="$TMP_BASE"
	g.remove --quiet rast="$TMP_MODE"
fi

# Recenter data
if [ "$GIS_OPT_ON" = "mean" ] ; then
	FOCUS=$MEAN
fi
if [ "$GIS_OPT_ON" = "median" ] ; then
	FOCUS=$MEDIAN
fi
if [ "$GIS_OPT_ON" = "mode" ] ; then
	FOCUS=$MODE
fi
if [ "$GIS_OPT_ON" = "value" ] ; then
	FOCUS=$GIS_OPT_VALUE
fi

g.message "Shifting data:"
r.mapcalc "$GIS_OPT_OUTPUT=$GIS_OPT_INPUT-$FOCUS"

g.message "Done."

exit 0

