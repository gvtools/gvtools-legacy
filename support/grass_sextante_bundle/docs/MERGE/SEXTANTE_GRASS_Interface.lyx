#LyX 2.0.0beta3 created this file. For more info see http://www.lyx.org/
\lyxformat 410
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
SEXTANTE and GRASS Interface Documentation
\end_layout

\begin_layout Section
SEXTANTE
\end_layout

\begin_layout Subsection
Limitations
\end_layout

\begin_layout Subsubsection
3D vector support
\end_layout

\begin_layout Standard
It appears that all SEXTANTE vector processing modules assume simple 2D
 vector data only.
\end_layout

\begin_layout Subsubsection
Memory management
\end_layout

\begin_layout Standard
Running under a 32 bit JVM, memory limits can quickly be reached when attempting
 to process large raster datasets.
\end_layout

\begin_layout Standard
Typically, modules will throw a generic error message, such as a Null Pointer
 Error.
 This problem cannot be resolved with current 32 bit versions of SEXTANTE.
 Alternatively, the GRASS modules can be used to provide more scalable raster
 data processing.
\end_layout

\begin_layout Subsection
Bugs
\end_layout

\begin_layout Subsubsection
SEXTANTE Algorithms
\end_layout

\begin_layout Standard
Landform Classification, Aspect (tested with Oaxaca DEM): result is shifted
 to the lower left! Regardless of SRS!
\end_layout

\begin_layout Standard
Feature classification: 
\begin_inset Quotes eld
\end_inset

0
\begin_inset Quotes erd
\end_inset

 category is not listed in manual page (=
\begin_inset Quotes erd
\end_inset

flat
\begin_inset Quotes erd
\end_inset

).
 It seems that the tool also does not always read NULL values correctly
 from input layers (kdem.tiff).
\end_layout

\begin_layout Standard
TIN tools: write Z value (avg) back into polygons
\end_layout

\begin_layout Standard
Visibility tool: dimension of output is: width = height, so does not work
 for non-square input!
\end_layout

\begin_layout Standard
There seems to be a problem with Table type options: 
\begin_inset Quotes eld
\end_inset

When I try to use a algorithm with a table parameter as input a error is
 always thrown on the batch process.
 That's using gvSIG OADE; because on official gvSIG the batch process is
 not working.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Subsubsection
Bean Shell
\end_layout

\begin_layout Standard
Typing exit() kills all of SEXTANTE.
 Is that good???
\end_layout

\begin_layout Subsubsection
Language fixes
\end_layout

\begin_layout Standard
Read and improve HTML man pages.
\end_layout

\begin_layout Standard
Main index: batch and CLI chapters are reversely linked! [still true?]
\end_layout

\begin_layout Standard
Fix the problem with sextante_help and locales: e.g.
 on locale 
\begin_inset Quotes eld
\end_inset

DE
\begin_inset Quotes erd
\end_inset

, SEXTANTE should fall back to sextante_help/en if 
\begin_inset Quotes eld
\end_inset

de
\begin_inset Quotes erd
\end_inset

 does not exist (currently the help index just breaks).
\end_layout

\begin_layout Subsubsection
TIN Tools
\end_layout

\begin_layout Standard
Make these work: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://git.zcu.cz/index.php/Sextante_algorithms
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
New Tools
\end_layout

\begin_layout Standard
Schreibe ein Tool, welches ein numerisches Attributfeld A ausliesst, den
 Wert als N speichert und von dem zugehoerigen Datensatz N identische Kopien
 erzeugt.
 Anwendung: extrahiere einzelne Punkte aus summarischen Punktdatensaetzen,
 die dann einzeln perturbiert werden koennen (Okoliste-Datensatz).
\end_layout

\begin_layout Section
GRASS Interface
\end_layout

\begin_layout Subsection
Bugs
\end_layout

\begin_layout Standard
Currtently shipping with GDAL 1.6.3, which needs Xerces-C for GML reading
 support.
 GML reading not available via v.in.ogr in this version.
 Solution: better switch to GDAL 1.7.x for next update, which can use expat
 for GML reading.
\end_layout

\begin_layout Standard
For output layers of type BYTE, the statistics do not get updated automatically.
 E.g.
 run 
\begin_inset Quotes eld
\end_inset

r.cva -f
\begin_inset Quotes erd
\end_inset

 and open the raster stats for the output: they are blank and must be manually
 generated.
 The problem is in gvsig_1_9/src/es/unex/sextante/gvsig/code/fileTools.java.
 See method 
\begin_inset Quotes eld
\end_inset

public static FLayer openLayer()
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout LyX-Code
//Update raster statistics in RMF
\end_layout

\begin_deeper
\begin_layout LyX-Code
	            try {
\end_layout

\begin_layout LyX-Code
	            	stats = DatasetListStatistics.loadDatasetListStatistics(((FLyrRaste
rSE) rlayer).getDataSource());
\end_layout

\begin_layout LyX-Code
	            	stats.forceToRecalc();
\end_layout

\begin_layout LyX-Code
	            } catch ( RmfSerializerException rmfe ) {
\end_layout

\begin_layout Standard
[For some reason, stats.DatasetListStatistics() fails for Byte type output.]
\end_layout

\end_deeper
\begin_layout Standard
CANNOT SET EXTENT FROM HIDDEN RASTER LAYERS!!! QUICK FIX: ONLY ADD layers
 to list that are visible.
 Alternatively: switch them on automatically, then switch off again (ugly).
\end_layout

\begin_layout Standard
When filtering for module keywords, statistic (number of algorithms) is
 not updated correctly.
 Perhaps all GRASS modules are always counted?
\end_layout

\begin_layout Standard
r.spread: need to have a module definition 
\begin_inset Quotes eld
\end_inset

name (all)
\begin_inset Quotes erd
\end_inset

 that includes all mandatory and optional outputs.
\end_layout

\begin_layout Standard
There are still some strings that simply won't get translated: Settings
 -> 
\begin_inset Quotes eld
\end_inset

Default_no_data_value
\begin_inset Quotes erd
\end_inset

; SEXTANTE Toolbar -> Add a new icon -> 
\begin_inset Quotes eld
\end_inset

You_need_to_restart 
\begin_inset Quotes erd
\end_inset

 (this one is part of the gvSIG interface).
 Why do the translation strings in 
\begin_inset Quotes eld
\end_inset

sextanteGUI.properties
\begin_inset Quotes erd
\end_inset

 no longer get applied properly?
\end_layout

\begin_layout Standard
Adding a GRASS algorithm to the SEXTANTE toolbar does not work (also, there
 is a console error message about an xml config file not being found).
 [DELAY: toolbar seems work in progress]
\end_layout

\begin_layout Standard
Modules with OPTIONAL raster INPUT are only active if there is a raster
 layer present (e.g.
 v.surf.rst).
\end_layout

\begin_layout Standard
Interface options: when selecting to use a temporary mapset, and then choosing
 
\begin_inset Quotes eld
\end_inset

lat/lon mode
\begin_inset Quotes erd
\end_inset

, a pre-existing user setting for the mapset path will be deleted.
\end_layout

\begin_layout Subsection
Operating system specific
\end_layout

\begin_layout Subsubsection
WINDOWS
\end_layout

\begin_layout Standard
$HOME = %UserProfile% (not case-sensitive!)
\end_layout

\begin_layout Standard
How the hell are Unix shell scripts supposed to be usable under Win32 with
 no MSYS? We will need to also bundle MSYS and put all that crap into an
 executable path.
 Does the WinGRASS startup script set a path to MSYS? [YES: must export
 env var GRASS_SH]
\end_layout

\begin_layout Standard
In GrassAlgorithmsFactory.java, method createAlgorithmsDescriptionAndHelpFiles(),
 near line 160:
\end_layout

\begin_layout LyX-Code
if (files[i].endsWith("exe") && (files[i].startsWith("v.") || files[i].startsWith("r.
"))
\end_layout

\begin_layout Standard
This will prevent any scripted module from running under Windows (they will
 have extension 
\begin_inset Quotes eld
\end_inset

bat
\begin_inset Quotes erd
\end_inset

, not 
\begin_inset Quotes eld
\end_inset

exe
\begin_inset Quotes erd
\end_inset

)!
\end_layout

\begin_layout Standard
WinGRASS is started via etc
\backslash
Init.bat, NOT Init.sh.
 This sets a few Windows specific things, before doing the same things that
 Init.sh does on other platforms.
 Take a good look at it!
\end_layout

\begin_layout Standard
See also this important post by Glynn Clements here:
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://osgeo-org.1803224.n2.nabble.com/GRASS-windows-Running-a-bash-script-in-Wingra
ss-td1929516.html
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Modules blacklist
\end_layout

\begin_layout Standard
Add lat-lon module blacklist.
 Can use method "GrassUtils.isLatLon()".
\end_layout

\begin_layout Standard
v.external: useless
\end_layout

\begin_layout Standard
v.in.e00: requires external command line tools.
\end_layout

\begin_layout Standard
v.net.*: requires arcs and nodes in separate layers of the same map.
\end_layout

\begin_layout Standard
v.vol.rst: not really useful without voxel support.
\end_layout

\begin_layout Subsection
Module Interface improvements
\end_layout

\begin_layout Standard
r.out.gdal: add automatic file extension support like for v.out.ogr (?).
\end_layout

\begin_layout Standard
v.out.ogr: support for writing MIF (ASCII) instead of TAB MapInfo files (in
 preprocessParams()).
\end_layout

\begin_layout Standard
v.kernel: currently blacklisted, because it has an output map that could
 be either raster or vector, depending on what mode it is run in!
\end_layout

\begin_layout Subsection
Documentation
\end_layout

\begin_layout Standard
Lat/lon processing is done using WGS 84 ellipsoid, no datum.
\end_layout

\begin_layout Subsubsection
Tasks
\end_layout

\begin_layout Standard
URGENT
\end_layout

\begin_layout Itemize
Update to latest version before release
\end_layout

\begin_layout Itemize
Put together an archive with all those extra GRASS modules to include.
\end_layout

\begin_layout Itemize
Disable SEXTANTE Toolbar for gvSIG distribution [DONE]
\end_layout

\begin_layout Itemize
Update config.xml file [DONE]
\end_layout

\begin_layout Itemize
Put my name into all changed files!
\end_layout

\begin_layout Itemize
Recompile GDAL with expat and Xerces-C: a lot of OGR drivers need those!
 Recompile GRASS with regexp support (g.mremove needed by some scripts ->
 v.surf.icw!)
\end_layout

\begin_layout Itemize
Include v.in.crossbones and v.in.geoplot
\end_layout

\begin_layout Itemize
Add the GDAL and PROJ (cs2cs) commandline tools to the GRASS bin folder.
 They may be used by some scripts.
\end_layout

\begin_layout Paragraph
FUTURE VERSIONS>
\end_layout

\begin_layout Paragraph
Wrap r.proj and v.proj
\end_layout

\begin_layout Standard
So people have some robust reprojection support other than gvSIG's built-in.
\end_layout

\begin_layout Paragraph
Support for package-managed GRASS installations
\end_layout

\begin_layout Standard
You know: where the packagers spread GRASS all over the file system, in
 different directories, like /usr/lib, usr/share, etc.
\end_layout

\begin_layout Paragraph
Support for calling GRASS algorithms from CLI and Modeler
\end_layout

\begin_layout Standard
Does not seem to be working at the moment (?).
\end_layout

\begin_layout Paragraph
Misc.
 Enhancements
\end_layout

\begin_layout Standard
Get a working progress display done on Windows -- somehow! How does QGIS
 handle this?
\end_layout

\begin_layout Standard
Should really log the time a module needs to complete.
 Might even be able to predict an ETA in the progress window.
\end_layout

\begin_layout Standard
Should we generally quote ALL option values?
\end_layout

\begin_layout Standard
Better support for standard 
\begin_inset Quotes eld
\end_inset

type=
\begin_inset Quotes erd
\end_inset

 options: present a multiple choice list of the supported geometry types.
\end_layout

\begin_layout Standard
Unify message handling: use one method that displays a warning, an error
 or information and logs it, too.
\end_layout

\begin_layout Standard
Implement cat column dropping for GRASS 6.5 (?): Drop 
\begin_inset Quotes eld
\end_inset

cat
\begin_inset Quotes erd
\end_inset

 column from Shapefile output.
 But only if it did not exist in the input file! Get schema before import
 from external file, get schema from GRASS map after import.
 The difference is the cat field.
 drop it from output DBF.
 V.out.ogr has the needed capability starting with GRASS 6.5.
 We can query for the presence of the necessary flag in the XML description
 info.
\end_layout

\begin_layout Standard
Make the temp names shorter: just take every 2nd character of the generated
 UUID.
 Also use a characteristic sequence, so the GRASS message text parser can
 recognize and subsitute them more easily.
\end_layout

\begin_layout Standard
r.out.gdal: Make GTiff the default format in the drop-down list and get rid
 of the stuff that's useless (VRT?); enable the 
\begin_inset Quotes eld
\end_inset

-c
\begin_inset Quotes erd
\end_inset

 option by default; 
\begin_inset Quotes eld
\end_inset

input
\begin_inset Quotes erd
\end_inset

 parameter should not be optional(!supported formats are already visible
 in the drop-down list).
\end_layout

\begin_layout Paragraph
Better Process Killing
\end_layout

\begin_layout Standard
Observed on Mac OS X: GRASS modules keep running after user pressed 
\begin_inset Quotes eld
\end_inset

Cancel
\begin_inset Quotes erd
\end_inset

: They run until they finish their processing.
 Even if gvSIG is quit!
\end_layout

\begin_layout Paragraph
Launch A GRASS Shell
\end_layout

\begin_layout Standard
A shell can be launched in an existing mapset or in the temporary one.
 Before launching, user should be presented with a list of layers to import
 into the shell (and under which names).
 After closing the shell, give user a choice which GRASS maps to export
 (and under which names).
 Imported maps and newly created ones should appear on the top of the list.
\end_layout

\begin_layout Paragraph
Get a grip on 3D polygons
\end_layout

\begin_layout Standard
Hard to import 3D polygons.
 E.g.: v.crossbones, v.out.vtk fails, because the 3D polygons take ages to be
 cleaned.
\end_layout

\begin_layout Standard
Probably need to supply a customized v.in.ogr, which is capable of importing
 3D polygons as simple faces.
\end_layout

\begin_layout Standard
Could also solve the 
\begin_inset Quotes eld
\end_inset

cat
\begin_inset Quotes erd
\end_inset

 column problem at the same time.
\end_layout

\begin_layout Paragraph
More flexible data I/O formats
\end_layout

\begin_layout Standard
GRASS 7 will change the game completely by providing direct access to GDAL
 and OGR data sources.
\end_layout

\begin_layout Standard
Switch to a more flexible file format for vector data exchange, maybe GML
 or SQLite3? Switch to (staticially linked) SQLITE3 as attribute table backend
 (???)
\end_layout

\begin_layout Standard
For output to file, we might as well let the user choose which file format
 he/she wishes to produce (v.out.ogr supports many!); for some formats, it
 will not be necessary to split the output in case of multi-geom data.
\end_layout

\begin_layout Standard
Add direct-to-VTK output support for vector layers and others.
 Changes have to be made to the gvSIG bindings.
 The output format is determined there via the file extension.
\end_layout

\begin_layout Paragraph
Support for really tricky modules
\end_layout

\begin_layout Standard
Before creating child algorithms, run a function that copies some customized
 XML description files into the descriptions folder.
 These can be used to replace modules with completely weird interfaces,
 such as v.surf.bspline.
\end_layout

\begin_layout Standard
Other examples: v.kernel (output type takes vector or raster)!
\end_layout

\begin_layout Paragraph
Support for table type input/output
\end_layout

\begin_layout Standard
Missing support for 
\begin_inset Quotes eld
\end_inset

table
\begin_inset Quotes erd
\end_inset

 type output (e.g.
 v.distance)!
\end_layout

\begin_layout Standard
Look how it's done in SEXTANE project 
\begin_inset Quotes eld
\end_inset

tables
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Paragraph
Module GUI improvements
\end_layout

\begin_layout Standard
Modules GUI improvements: add restorable option settings
\end_layout

\begin_layout Standard
Modules GUI improvements: Mark required options in the GRASS modules GUI.
\end_layout

\begin_layout Paragraph
Imagery modules
\end_layout

\begin_layout Standard
Think about how to integrate i.* modules.
 Some of them can be used as is, others need imagery group definitions.
 But it should be possible to generate the latter from a GUI as needed (just
 run i.group for selected raster layers; GRASS has specific option names
 for image groups and subgroups: see i.cluster).
 Actually, could just create a pseudo image group and then put all user-selected
 input rasters into a subgroup of that group, then always run the modules
 on that subgroup, if they need a subgroup, otherwise on the group itself.
 Potentially, this could bring orthophoto production to gvSIG!
\end_layout

\begin_layout Paragraph
Network modules (v.net.*)
\end_layout

\begin_layout Standard
Integrate network modules: they expect arcs and nodes in separate layers
 of the same map: replace arc and node input layer parameters with vector
 map inputs.
 After data import, merge imported maps into one, run operation, then separate
 again for output.
\end_layout

\begin_layout Standard
Make the network modules work by somehow faking two GRASS layers and substitutin
g layer 1 of two separate input shapefiles instead.
\end_layout

\begin_layout Paragraph
Support for GRASS MASK
\end_layout

\begin_layout Standard
Let user choose a raster layer on the GRASS settings page which will then
 be used as a mask for the processing (r.mask currently blacklisted).
\end_layout

\begin_layout Standard
Issue an information message if the user connects to a mapset that contains
 a mask.
\end_layout

\begin_layout Paragraph
Support for GRASS_ADDONS_PATH
\end_layout

\begin_layout Standard
Provide a GUI setting for it and adjust the startup scripts generation according
ly.
 Can this also be multiple paths?
\end_layout

\begin_layout Paragraph
Support for modules with multiple map output
\end_layout

\begin_layout Standard
E.g.
 r.series, v.random.surface.
 r.blend
\end_layout

\begin_layout Standard
Look at r.series: it's currently parsed incorrectly: the outmaps selection
 appears as part of the input maps section.
\end_layout

\begin_layout Paragraph
Support for r.le.* and r.li.* modules
\end_layout

\begin_layout Standard
Need to replace the interactive r.le/le.setup modules to create the configuration
 file.
\end_layout

\begin_layout Paragraph
Support for color table management via r.colors
\end_layout

\begin_layout Standard
Full support for r.colors includes the raster= option (which is currently
 being suppressed).
 This would require parsing of the input layer's color table (but that would
 be GIS specific, e.g.
 the RMF in gvSIG) and copying the existing color table over to the GRASS
 color element.
\end_layout

\begin_layout Paragraph
Pairs/triplets etc.
 of options
\end_layout

\begin_layout Standard
Look at v.edit:
\end_layout

\begin_layout LyX-Code
	<parameter name="zbulk" type="float" required="no" multiple="no">
\end_layout

\begin_layout LyX-Code
		<label>
\end_layout

\begin_layout LyX-Code
			Starting value and step for z bulk-labeling
\end_layout

\begin_layout LyX-Code
		</label>
\end_layout

\begin_layout LyX-Code
		<description>
\end_layout

\begin_layout LyX-Code
			Pair: value,step (e.g.
 1100,10)
\end_layout

\begin_layout LyX-Code
		</description>
\end_layout

\begin_layout LyX-Code
		<keydesc>
\end_layout

\begin_layout LyX-Code
			<item order="1">value</item>
\end_layout

\begin_layout LyX-Code
			<item order="2">step</item>
\end_layout

\begin_layout LyX-Code
		</keydesc>
\end_layout

\begin_layout LyX-Code
	</parameter>
\end_layout

\begin_layout Standard
Obviously, the <item order=> values define the 2-sequence.
 This is NOT declared as type 
\begin_inset Quotes eld
\end_inset

multiple
\begin_inset Quotes erd
\end_inset

! Currently such parameters are all simply handled as type String.
 It would be better to how specific input masks that respect the 
\begin_inset Quotes eld
\end_inset

item order
\begin_inset Quotes erd
\end_inset

 specifiers, however.
\end_layout

\begin_layout Paragraph
Special module GUIs
\end_layout

\begin_layout Standard
Customized GUIs for r.mapcalc, and r3.mapalc: take SEXTANTE's existing Map
 Algebra GUI and build on that!
\end_layout

\begin_layout Paragraph
Support for modules that change the input map(s)
\end_layout

\begin_layout Standard
E.g.
 values uploaded into an existing attribute table field of an input map
 will be lost (e.g.
 v.distance).
 Implement a generic solution in postProcessBeforeExport(); KEEP RECORD
 of SIZE of vector files (table/coords): if anything changes, we need to
 export.
\end_layout

\begin_layout Paragraph
Proper GUI handling for attribute table fields
\end_layout

\begin_layout Standard
Modules GUI improvements: map options to attribute table fields, so they
 can be selected just like for SEXTANTE algs.
 Some modules have this in their module interface description: 
\emph on
<gisprompt age="old_dbcolumn" element="dbcolumn" prompt="dbcolumn" />.
 
\emph default
However, for modules with multiple input maps, we do not know which one
 this relates too (are there any modules with multiple input maps and dbcolumn
 type parameters?).
\end_layout

\begin_layout Standard
Currently, dbcolumn type fields are just handled as string inputs, but in
 the AdditionInfoString.java structure, a boolean flag is set to indicate
 that it is an attribute table field (in 
\emph on
GrassAlgorithm.java
\emph default
):
\end_layout

\begin_layout LyX-Code
                 else if ( m_sGisPromptElement.equals("dbcolumn") ) {   
              
\end_layout

\begin_layout LyX-Code
            	   //TODO: needs a more elegant input widget
\end_layout

\begin_layout LyX-Code
            	   param = new ParameterString();
\end_layout

\begin_layout LyX-Code
            	   final AdditionalInfoString ais = new AdditionalInfoString();
\end_layout

\begin_layout LyX-Code
            	   ais.setDefaultString(m_sDefaultValue);
\end_layout

\begin_layout LyX-Code
            	   ais.setIsField(true);
\end_layout

\begin_layout LyX-Code
            	   param.setParameterAdditionalInfo(ais);                  
   
\end_layout

\begin_layout LyX-Code
               }                           
\end_layout

\begin_layout LyX-Code
[...]
\end_layout

\begin_layout LyX-Code
                  else if (m_sGisPromptElement.equals("dbcolumn")) {
\end_layout

\begin_layout LyX-Code
                	  //TODO: needs a more elegant input widget
\end_layout

\begin_layout LyX-Code
                	  param = new ParameterString();
\end_layout

\begin_layout LyX-Code
                	  final AdditionalInfoString ais = new AdditionalInfoString();
\end_layout

\begin_layout LyX-Code
                	  ais.setDefaultString(m_sDefaultValue);
\end_layout

\begin_layout LyX-Code
                	  ais.setIsField(true);
\end_layout

\begin_layout LyX-Code
                	  param.setParameterAdditionalInfo(ais);
\end_layout

\begin_layout LyX-Code
                  }
\end_layout

\begin_layout Standard
For proper GUI integration, they need to be handled as type 
\emph on
Sextante.parameter.ParameterTypeTableField
\emph default
.
\end_layout

\begin_layout Standard
There is not yet any example of a multiple field parameter in Sextante,
 but v.distance (param column=) is of exactly that type.
 Multiple params are always handled as an object of type 
\emph on
AdditionalMultipleInput.java
\emph default
.
 I have already added 
\end_layout

\begin_layout LyX-Code
public static final int DATA_TYPE_FIELD = 8; 
\end_layout

\begin_layout Standard
as a new type descriptor to that class.
\end_layout

\begin_layout Paragraph
Voxel/3D vector processing
\end_layout

\begin_layout Enumerate
Parsing parameters: 
\emph on
sextante/../
\emph default
s
\emph on
extante/additionalInfo
\emph default
 has the info structures for all parameters.
 Already made enhancements to:
\end_layout

\begin_deeper
\begin_layout Standard

\emph on
AdditionalInfoRasterLayer.java,
\end_layout

\begin_layout Standard

\emph on
AdditionalInfoVectorLayer.java
\end_layout

\begin_layout Standard

\emph on
AdditionalInfoFilepath.java
\end_layout

\begin_layout Standard
The former two now have a 3D status attribute, the later one that tells
 whether it is a Voxel Data File.
\end_layout

\begin_layout Standard
Idea: when creating the GRASS geoalgorithm parameters, treat voxel input/output
 layers as files.
 Set the isVoxelData attribute on the AdditionalnfoFilepath object.
 This will then allow GrassAlgorithm.java to import/export data accordingly.
\end_layout

\end_deeper
\begin_layout Enumerate
Setting 3D Region:
\end_layout

\begin_deeper
\begin_layout Standard
The main data structure and methods for region management is in 
\emph on
sextante/../sextante/rasterWrappers/GridExtent.java
\emph default
.
\end_layout

\begin_layout Standard
The fields needed for 3D raster data are already in there, but nothing is
 implemented yet in terms of methods.
 There are many methods here.
 It is unclear, how many are really needed.
\end_layout

\begin_layout Standard
Interactive setting of the extent is done in 
\emph on
sextante_gui/../gui/algorithm/RasterExtentPanel.java
\emph default
.
 Method 
\emph on
assignExtent()
\emph default
 has the important code: look at how GrassAlgorithm type objects are handled:
 setting an extent is only forced if there is raster output and it's not
 provided by an r.in.* module (those set the extent and resolution of new
 maps automatically).
 Details: look at code after 
\begin_inset Quotes eld
\end_inset

catch (final NumberFormatException e)
\begin_inset Quotes erd
\end_inset

 (ca.
 line 145): This should be handled the same way for voxel data.
 For voxel data, we should just set three additional input fields: Z Range
 + Cell Height.
 These will always have to be set manually.
 There is no way we can derive them from existing SEXTANTE layers.
 But at least we may be able to set persistent defaults.
\end_layout

\end_deeper
\begin_layout Enumerate
GRASS processing
\end_layout

\begin_deeper
\begin_layout Standard
All the main voxel processing will be done in 
\emph on
sextante_gui/../grass/GrassAlgorithm.java
\emph default
: look at how raster input and output objects are handled and derive code
 from there.
 Most work will have to be done in 
\emph on
processAlgorithm()
\emph default
.
\end_layout

\begin_layout Standard
The GRASS algorithm are generated by 
\emph on
sextante_gui/../grass/GrassAlgorithmsFactory.java: 
\emph default
we need to add support for r3.* modules there.
 They are currently explicitly disabled.
 Sorting a module into a group is done in 
\emph on
defineCharacteristicsFromGrassXML(): setGroup("Raster (r.*)"); ...
\end_layout

\end_deeper
\begin_layout Enumerate
Voxel display: Primary output should be a VTK or other ASCII file.
 But as secondary output, we could produce horizontal 2D raster slices at
 user-definable Z levels!
\end_layout

\begin_layout Paragraph
GRASS Layers
\end_layout

\begin_layout Standard
GRASS supports multiple layers in one map (the use of these terms here is
 confusing!).
 Many vector modules have a 
\begin_inset Quotes eld
\end_inset

layer=
\begin_inset Quotes erd
\end_inset

 option to select which one to use.
 This feature does not work under SEXTANTE, since vector data management
 relies on shapefiles and those are always single layered.
 Just ignore that option and leave it to the default, which should always
 be 
\begin_inset Quotes eld
\end_inset

1
\begin_inset Quotes erd
\end_inset

.
 One notable exception: v.surf.bspline requires you to set 
\begin_inset Quotes eld
\end_inset

layer=1
\begin_inset Quotes erd
\end_inset

 manually if you want to interpolate using an attribute table field (and
 not Z coordinate values).
\end_layout

\begin_layout Paragraph
cat Column handling
\end_layout

\begin_layout Standard
The 
\begin_inset Quotes eld
\end_inset

cat
\begin_inset Quotes erd
\end_inset

 column is an integer field which GRASS uses as the primary key for all
 geometries.
 Many GRASS modules allow choosing 
\begin_inset Quotes eld
\end_inset

categories
\begin_inset Quotes erd
\end_inset

, i.e.
 range of values for 
\begin_inset Quotes eld
\end_inset

cat
\begin_inset Quotes erd
\end_inset

 for selection of geometries.
 To use this feature, remember that 
\begin_inset Quotes eld
\end_inset

cat
\begin_inset Quotes erd
\end_inset

 starts at 
\begin_inset Quotes eld
\end_inset

1
\begin_inset Quotes erd
\end_inset

 for the first geometry and then is incremented by 
\begin_inset Quotes eld
\end_inset

1
\begin_inset Quotes erd
\end_inset

 for every following.
 Essentially 
\begin_inset Quotes eld
\end_inset

cat
\begin_inset Quotes erd
\end_inset

 = 
\begin_inset Quotes eld
\end_inset

attribute table row no.
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Paragraph
Module dialogs
\end_layout

\begin_layout Standard
Missing support to restore previous parameter sets, like the native SEXTANTE
 modules have.
\end_layout

\begin_layout Standard
GRASS flags should really be displayed using their description strings,
 not just the shortcut character.
 
\end_layout

\begin_layout Standard
So, e.g.
 for v.out.ogr instead of:
\end_layout

\begin_layout LyX-Code
u
\end_layout

\begin_layout Standard
It would be nice to have:
\end_layout

\begin_layout LyX-Code
(-u) Open an existing datasource for update
\end_layout

\begin_layout Standard
Sometime, the description strings will get too long, in which case they
 will have to be abbreviated:
\end_layout

\begin_layout LyX-Code
(-u) Open an existing datasource [...]
\end_layout

\begin_layout Standard
But this would still be better than the current situation!
\end_layout

\begin_layout Standard
Additionally, tooltips for both GRASS options and flags, using the description
 strings would be good.
\end_layout

\begin_layout Paragraph
Adjustable Region Settings
\end_layout

\begin_layout Standard
For some vector modules, the computational region needs to be set correctly
 in GRASS.
 Normally, all GRASS vector modules should by default ignore the region.
 But there are some that are region sensitive (such as v.voronoi).
\end_layout

\begin_layout Standard
Unfortunately, SEXTANTE does not allow region settings for vector modules
 and g.region cannot be called from SEXTANTE.
 A good thing would be a graphical tool to run g.region independently of
 any GRASS modules (and perhaps a way to visualize the current GRASS region
 in the active view, just like QGIS does).
\end_layout

\begin_layout Paragraph
Manual Command Launching
\end_layout

\begin_layout Standard
Add a small shell to launch grass commands manually.
 [Does the built-in SEXTANTE shell already allow this?]
\end_layout

\begin_layout Subsection
Symbology and Labels
\end_layout

\begin_layout Standard
Invert colour button ramps for raster maps and symbology.
\end_layout

\begin_layout Standard
Explicit colour for NULL raster cells.
\end_layout

\begin_layout Standard
Save out and load layer XML definitions.
\end_layout

\begin_layout Standard
Add some more color schemes from here: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://colorbrewer2.org/
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Expression type filter for joined fields.
\end_layout

\begin_layout Standard
Label halos: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://blogs.techrepublic.com.com/programming-and-development/?p=740
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Searchable labels.
\end_layout

\begin_layout Standard
Global transparency for a vector theme (currently only at symbol level).
\end_layout

\begin_layout Subsection
Table of Contents
\end_layout

\begin_layout Standard
Open/close all (selected) groups.
\end_layout

\begin_layout Standard
Indicate target during drag and drop operations.
\end_layout

\begin_layout Standard
Allow to drop a layer outside a group if only groups are present on the
 first level of the TOC.
\end_layout

\begin_layout Standard
Fix those (buggy) triggers that automatically expand the TOC.
\end_layout

\begin_layout Subsection
i18n
\end_layout

\begin_layout Subsubsection
Decimal point and grouping
\end_layout

\begin_layout Standard
Some functions use decimal points and separators in labels:
\end_layout

\begin_layout Itemize
Map layout: scale bar
\end_layout

\begin_layout Itemize
Raster layer legends
\end_layout

\begin_layout Itemize
Vector layer legends (e.g.
 Symbology type "intervals"):
\end_layout

\begin_layout Itemize
Display of distances and coordinates in status bar
\end_layout

\begin_layout Standard
User needs to be able and set them to "," or ".", depending on language conventio
ns.
\end_layout

\begin_layout Standard
The text fields used for input are probably associated with a Java NumberFormat
 object.
\end_layout

\begin_layout Standard
This has methods setGroupingUsed() and setRoundingMode(): 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://java.sun.com/javase/6/docs/api/java/text/NumberFormat.html
\end_layout

\end_inset

.
 They should be set properly to improve the look and feel of numeric input
 fields.
\end_layout

\begin_layout Subsubsection
Unsorted
\end_layout

\begin_layout Standard
CAD: internal polygon: click outside poly: Spanish error message.
\end_layout

\begin_layout Standard
Spanish message when loading (converting) old gvSIG projects.
\end_layout

\begin_layout Standard
Symbology: Choose Symbol window: "Aceptar".
\end_layout

\begin_layout Standard
Rename a View: window title changes to "Vista".
\end_layout

\begin_layout Standard
Put new file type strings into the main language file, so they will be available
 in all languages.
\end_layout

\begin_layout Standard
- TRANSLATION: Think about translation of "Print layout" (for units): is
 this really accurate?
\end_layout

\begin_layout Standard
- TRANSLATION: Color table: Opacity setting: wrong title in window (Transparency
), aceptar + cancelar
\end_layout

\begin_layout Standard
- TRANSLATION: Feature information for raster pixels: View_Point, World_Point,
 Pixel_Point, Band_Value
\end_layout

\begin_layout Standard
- TRANSLATION: Raster color table: tooltips!
\end_layout

\begin_layout Standard
- TRANSLATION: "Aceptar" still around in some places: search globally",
 also "Cancelar"!
\end_layout

\begin_layout Standard
- TRANSLATION: Deutsche Sprachanpassungen (Ruth!)
\end_layout

\begin_layout Standard
- TRANSLATION: Make sure to apply English, English GB and English US for
 the final binaries!!!
\end_layout

\begin_layout Standard
- TRANSLATION: Computational Geometry: algorithmische Geometrie
\end_layout

\begin_layout Standard
- TRANSLATION: Otros = Others (About dialog)
\end_layout

\begin_layout Standard
- TRANSLATION: Splash screen messages [DONE]
\end_layout

\begin_layout Standard
- TRANSLATION: setting_up_event_queue [DONE]
\end_layout

\begin_layout Standard
- TRANSLATION: "Ficheros SHP" in all geoprocessing tools [DONE]
\end_layout

\begin_layout Standard
- TRANSLATION: join op: source/target table confusion!
\end_layout

\begin_layout Standard
- TRANSLATION: link op: source and target may be useless terminilogy, as
 the link works the same both ways!
\end_layout

\begin_layout Standard
- TRANSLATION: CAD editor: editing properties page
\end_layout

\begin_layout Standard
- TRANSLATION: Remote sensing tools.
\end_layout

\begin_layout Standard
- TRANSLATION: include new strings (see Trac tickets)
\end_layout

\begin_layout Standard
- TRANSLATION: Raster Tools: Raster calculator: "Constants -> Tamano celda
 [raster name]"
\end_layout

\begin_layout Section
Known Issues
\end_layout

\begin_layout Subsection
Java Issues
\end_layout

\begin_layout Standard
This version of gvSIG has been optimized to run on Java 1.6 virtual machines.
\end_layout

\begin_layout Standard
On Linux and Windows platforms, gvSIG OADE comes with a bundled Java Runtime
 Environment (JRE) which has been tested and is known to work well with
 this release of the software.
 We recommend you keep it that way.
 Running gvSIG with a different JRE may or may not work.
 Try at your own risk.
\end_layout

\begin_layout Standard
On Mac OS X, Apple decides what version of Java you get to use, depending
 on the version of Mac OS X.
 For Java 1.6, you need to be running Mac OS X 10.5 or higher.
\end_layout

\begin_layout Standard
This software contains 32 bit JNI (Java Native Interface) bindings for raster
 data and projection support.
 It cannot be run from a 64 bit JVM.
 If you do not wish to or cannot use the bundled 32 bit JRE that comes with
 gvSIG OADE and instead use a 64 bit JRE/JVM installed on your system, then
 you must force that JVM into 32 bit mode by appending a 
\begin_inset Quotes eld
\end_inset

-d32
\begin_inset Quotes erd
\end_inset

 option to the line that launches the JVM in the gvSIG startup script.
\end_layout

\begin_layout Standard
If you attempt to run gvSIG OADE on a 64 bit JVM and use any raster data
 or projection functionality, then you will get an 
\begin_inset Quotes eld
\end_inset

UnsatisfiedLinkError
\begin_inset Quotes eld
\end_inset

 and the data will fail to load into the project View.
\end_layout

\begin_layout Standard
Windows users: please note that the JRE bundled with the Windows version
 of gvSIG OADE includes a number of additional DLL files in the 
\begin_inset Quotes eld
\end_inset

bin
\begin_inset Quotes erd
\end_inset

 directory.
 If you wish to run gvSIG OADE using a different JRE, then you need to also
 copy over all of the latter!
\end_layout

\begin_layout Subsection
Operating System Related
\end_layout

\begin_layout Subsubsection
Linux
\end_layout

\begin_layout Standard
This is the preferred platform for running gvSIG.
 It offers superior 32 bit memory management and full control over the Java
 environment in which gvSIG runs.
 Linux is also our primary development and testing platform.
\end_layout

\begin_layout Standard
This version requires a GLIBC version of 2.3 or higher.
 Other than that, any modern Linux distribution should be fine.
 At OA, we use mostly Ubuntu.
\end_layout

\begin_layout Paragraph
32 Bit Compatibility Libraries Needed
\end_layout

\begin_layout Standard
When starting gvSIG on a 64 bit Linux system, the following error message
 is generated:
\end_layout

\begin_layout Standard
Exception in thread "main" java.lang.UnsatisfiedLinkError: <gvsig-installation-dir
>/jre/lib/i386/xawt/libmawt.so: libXext.so.6: cannot open shared object file:
 No such file or directory
\end_layout

\begin_layout Standard
Then this indicates that "libXext.so.6", which is a requirement of Orcale's
 JRE 1.6 32 bit (the one that comes bundled with gvSIG OADE) is missing.
 That library should be in some 32 bit compatibility package of your Linux
 distribution.
 On Debian based systems (including Ubuntu) it is called "ia32".
 For installation instructions, please consult your Linux distribution's
 manual.
\end_layout

\begin_layout Subsubsection
MacOS X
\end_layout

\begin_layout Standard
The Mac OS X port is relatively new and there are a few glitches.
 However, all in all it should be as capable as any other version.
 
\end_layout

\begin_layout Standard
You will need a Mac OS X version that comes with a Java 1.6 installation,
 such as Snow Leopard.
 Please read the operating system specific notes in the Installation Guide
 for more advice on this.
\end_layout

\begin_layout Standard
We recommend that you do not use Apple's Mac OS X look and feel for Java,
 as it does not comply with that of the other platforms and leads to numerous
 problems with the user interface (see below).
 You can change the user interface 
\begin_inset Quotes eld
\end_inset

look and feel
\begin_inset Quotes erd
\end_inset

 in gvSIG's preferences dialog (section 
\begin_inset Quotes eld
\end_inset

General->Appearance
\begin_inset Quotes erd
\end_inset

).
 After a change, you will have to restart gvSIG to see the effects.
 We recommend 
\begin_inset Quotes eld
\end_inset

Plastic XP
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Paragraph
Associating .gvp files with the App does not work
\end_layout

\begin_layout Standard
Due to a flaw in the startup script for Mac OS X, it is currently not possible
 to associate .gvp (gvSIG project) files with the gvSIG OADE App and have
 gvSIG open them up automatically.
\end_layout

\begin_layout Paragraph
Garbled Dialogs (Buttons Displayed Partially etc.)
\end_layout

\begin_layout Standard
Mac OS X uses very generous spacing between user interface components and
 this can result in problems with the layout of some dialogs.
 Where this appears, resizing the dialog window to make it a little larger
 should resolve the problem.
\end_layout

\begin_layout Paragraph
Raster Export (Save as...) Throws a Java NULL Pointer Error
\end_layout

\begin_layout Standard
See (Wrong File Type Settings in Some File Selectors).
\end_layout

\begin_layout Paragraph
Wrong File Type Settings in Some File Selectors
\end_layout

\begin_layout Standard
Some file selection dialogs offer options for specific file types.
 On Mac OS X, these sometimes seem to get shuffled so that the wrong options
 are shown for the default file type.
 Simply select the correct file type one more time to make sure that the
 right options are being shown.
\end_layout

\begin_layout Subsubsection
Windows
\end_layout

\begin_layout Standard
In general, gvSIG runs very well on Windows XP, Vista and 7.
 It is reported to also run on Windows 2000, but this has not been tested
 by us.
 Windows has poor memory management on 32 bit platforms, so the maximum
 amount of Java heapspace that can be used will be more limited than on
 e.g.
 Linux.
 If you experience memory management problems under 32 bit Windows, we recommend
 upgrading your operating system to a current version of Linux.
\end_layout

\begin_layout Paragraph
The default vector layer symbols are missing(some color raster schemes are
 mising)
\end_layout

\begin_layout Standard
Please take a look at the installation manual to learn how to reset your
 user settings.
 
\end_layout

\begin_layout Standard
Once that is done, start gvSIG once.
 Do 
\emph on
not
\emph default
 start it via an associated .gvp file or via gvSIG.exe in the installation
 folder.
 Instead, use the entry in the Start menu, the launcher icon on your desktop
 or bin/gvSIG.bat (i.e.
 the batch script) in your installation folder.
 This will make sure that all default styles and color schems are copied
 to your user settings folder and that the program settings are reset to
 useful defaults.
\end_layout

\begin_layout Standard
Afterwards, open 
\begin_inset Quotes eld
\end_inset

File->Preferences
\begin_inset Quotes erd
\end_inset

 in gvSIG and go through all the options to make sure they fit your needs.
\end_layout

\begin_layout Paragraph
Opening a project file (.gvp) from the Windows desktop does not launch gvSIG/laun
ches wrong version of gVSIG
\end_layout

\begin_layout Standard
It is possible that the gvSIG project files extension (
\begin_inset Quotes eld
\end_inset

.gvp
\begin_inset Quotes erd
\end_inset

) is still associated with an earlier installation of gvSIG which may no
 longer exist.
 Or that gvSIG has been installed by another user on your system and your
 own user account does not have the right file association setting (gvSIG
 is portable software, so it never touches any system-wide settings).
 
\end_layout

\begin_layout Standard
It is easy to fix this.
 Simply open the project file's properties menu (right mouse button), choose
 
\begin_inset Quotes eld
\end_inset

Open with
\begin_inset Quotes erd
\end_inset

 and then browse to the 
\begin_inset Quotes eld
\end_inset

gvSIG.bat
\begin_inset Quotes erd
\end_inset

 launcher script in your current installation folder.
\end_layout

\begin_layout Standard
More information can be found here: http://support.microsoft.com/kb/307859
\end_layout

\begin_layout Paragraph
Display Driver Problems (Grayed Out Areas etc.)
\end_layout

\begin_layout Standard
We have had some reports of strange graphics effects on Windows, notably
 gray blobs occuring when trying to insert objects into a map layout.
 This was found to be caused by buggy Windows graphics card drivers.
 To cure such problems, go into Windows' graphics driver setttings and disable
 some or all of the 2D acceleration options.
\end_layout

\begin_layout Paragraph
Problems with Data Stored on Network Shares
\end_layout

\begin_layout Standard
The Windows network protocols can be unreliable, leading to disconnected
 file shares.
 If data sources for layers are stored on such networked shares, then problems
 may occur.
 We have found gvSIG itself to be relatively robust against this.
 But SEXTANTE is known to produce empty result layers in such cases.
 Check the layer properties to see whether the data source is properly connected.
 If not, delete the layer from the TOC and add it again, or save your project
 and restart gvSIG.
\end_layout

\begin_layout Paragraph
System Themes (
\begin_inset Quotes eld
\end_inset

Look and Feel
\begin_inset Quotes erd
\end_inset

 Extensions)
\end_layout

\begin_layout Standard
There are some theming 
\begin_inset Quotes eld
\end_inset

extensions
\begin_inset Quotes erd
\end_inset

 around for Windows XP that change the 
\begin_inset Quotes eld
\end_inset

look and feel
\begin_inset Quotes erd
\end_inset

, e.g.
 to be more like Vista or Windows 7.
 They are known to cause trouble with Java Swing applications (gvSIG is
 such an application).
 So if you get complete and unexplained crashes of gvSIG on start-up, please
 deactivate or (even better) uninstall any such 
\begin_inset Quotes eld
\end_inset

extension
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsection
ArcSDE Support
\end_layout

\begin_layout Standard
The only version of ArcSDE properly tested (and support) by gvSIG is currently
 9.1.
\end_layout

\begin_layout Standard
To update the ArcSDE driver, go to this page:
\end_layout

\begin_layout Standard
http://support.esri.com/index.cfm?fa=downloads.patchesServicePacks.viewPatch&PID=19&M
etaID=1198/
\end_layout

\begin_layout Standard
Find the section 
\begin_inset Quotes eld
\end_inset

ArcSDE SDK Install for
\begin_inset Quotes erd
\end_inset

 (your operation system) and download the archive file.
 It should contain the files jpe91_sdk.jar and jsde91_sdk.jar.
 Copy both to the 
\begin_inset Quotes eld
\end_inset

bin/gvSIG/extensiones/org.gvsig.sde/lib
\begin_inset Quotes erd
\end_inset

 suddirectory of your gvSIG installation, replacing any older versions.
 Then restart gvSIG.
\end_layout

\begin_layout Subsection
3D Extension
\end_layout

\begin_layout Standard
Do not install the 3D extension over this version of gvSIG.
 If you must use the 3D extension, install it over a separate program installati
on.
 It will conflict with some of the updates and raster driver fixes for gvSIG
 OADE.
 You have been warned!
\end_layout

\begin_layout Subsection
CAD Editor
\end_layout

\begin_layout Subsubsection
Joining Geometries
\end_layout

\begin_layout Standard
JOIN (typed into console): error message (but joins selected polygons, anyhow).
\end_layout

\begin_layout Subsection
Filenames
\end_layout

\begin_layout Standard
As a Java application, gvSIG is sensitive to bad filenames.
 Even though operating systems like Windows may allow this, DO NOT use accent
 characters, punctuation marks or white space in filenames.
 NOT EVER.
 If you do, brace yourself for all sorts of weird behavior from the application,
 such as bogus error messages or layers not being loaded.
 You have been warned.
\end_layout

\begin_layout Standard
Also, avoid using capitalization.
 Windows' file system does not care about it when reading files, only when
 creating them.
 But on other platforms, case is respected for both reading and writing.
 To be on the safe side, use small caps only.
\end_layout

\begin_layout Standard
Windows' file management is also crippled somewhat in that it cannot deal
 with paths that are longer than 255 characters.
 Even if you use a short file name, the path can still get too long if the
 names of the directories that lead up to it form a long string.
\end_layout

\begin_layout Subsection
General File Management
\end_layout

\begin_layout Subsubsection
Concurrent File Access
\end_layout

\begin_layout Standard
GvSIG does not manage any exclusive locks on files, which can lead to data
 corruption if more than one person edits a file-based resource, such as
 a project file, DBase table or Shapefile on disk.
\end_layout

\begin_layout Standard
For multi-user, concurrent write data access, please use a spatial database
 such as PostGIS which offers the mechanisms necessary to ensure data health
 in such an environment.
\end_layout

\begin_layout Subsubsection
File Names
\end_layout

\begin_layout Standard
Another 'problem' that comes to mind is the use of special characters in
 the file names -- I think this has more to do with Java rather than gvSIG
 -- use the minus sign in a name and all hell breaks loose.
\end_layout

\begin_layout Subsection
General User Interface
\end_layout

\begin_layout Subsubsection
Dialogs and Widgets Garbled
\end_layout

\begin_layout Standard
There may be problems with some dialogs getting mutilated (most significantly,
 the "Filter" dialog for attribute table values).
 Change the skin in the program preferences to fix this.
\end_layout

\begin_layout Subsubsection
Grouped Layers not Accessible
\end_layout

\begin_layout Standard
Handling grouped layers: the 
\begin_inset Quotes eld
\end_inset

Spatial selection
\begin_inset Quotes erd
\end_inset

 tool does not show vector layers in groups properly.
 Instead, it shows the groups names.
\end_layout

\begin_layout Standard
If temporary layers (observed with raster layers) are moved into a group,
 they become invalid.
\end_layout

\begin_layout Standard
Layers in groups are not accessible by many tools.
 Tested with: Remote Sensing Extension (Mosaic tool), Spatial selection
 tool.
\end_layout

\begin_layout Subsubsection
Geoprocessing Tools
\end_layout

\begin_layout Standard
Default to project files folder for Shapefile export in all geoprocessing
 tools.
\end_layout

\begin_layout Subsection
Georeferencer
\end_layout

\begin_layout Subsubsection
Trouble With Empty Views
\end_layout

\begin_layout Standard
Opening the georeferencer with a View that has no layers as map background
 results in an error messages.
 When running the georeferencer from within a new, blank project, select
 to use no background map in the startup window, instead.
\end_layout

\begin_layout Subsection
Project Files
\end_layout

\begin_layout Subsubsection
Project File Versions
\end_layout

\begin_layout Standard
Project files written by gvSIG 1.9 (and thus OADE 2010) differ very much
 from the earlier format used by gvSIG 1.1.2.
 The two file formats are not compatible.
 Newer gvSIG versions will read older project file formats and offer to
 save them in the new format.
 But older versions of gvSIG cannot read newer project file formats.
\end_layout

\begin_layout Standard
There have been problems reported opening old gvSIG version 1.1.2 project
 files with raster layers.
 Some rasters seem to have turned all red or black.
 The fix seems to be to delete the layers from the TOC and add the rasters
 anew.
 
\end_layout

\begin_layout Subsection
Raster Data Formats
\end_layout

\begin_layout Subsubsection
ERDAS IMAGINE RRD Generation
\end_layout

\begin_layout Standard
Generating RRD format overviews when saving out IMAGINE format rasters does
 currently not work.
\end_layout

\begin_layout Subsubsection
GRASS Raster Files
\end_layout

\begin_layout Standard
Because of linking problems on (surprise, surprise) Windows, support for
 GRASS raster data via GDAL has been disabled for all platforms in gvSIG
 OADE.
 If you want to compile a GDAL version with GRASS support yourself and use
 it, please be aware of the following issue:
\end_layout

\begin_layout Standard
The GDAL GRASS driver will crash (and take the whole JRE down with it!)
 if a GRASS raster map is added to a gvSIG View and that raster map comes
 from a GRASS location without a properly defined spatial reference system
 (such locations are the result of choosing option "A x,y" when creating
 a new GRASS location).
\end_layout

\begin_layout Standard
You will get the following console log output:
\end_layout

\begin_layout LyX-Code
Warning 1: GRASS warning: <PROJ_INFO> file not found for location <kythera>
 
\end_layout

\begin_layout LyX-Code
Warning 1: GRASS warning: <PROJ_UNITS> file not found for location <kythera>
\end_layout

\begin_layout Standard
So make sure that the SRS for the GRASS location has been defined properly
 and the two files PROJ_INFO and PROJ_UNITS exist in the PERMANENT mapset.
 If they don't and you whish to load the data into a gvSIG View without
 any reprojection, just create two empty files in the PERMANENT folder.
\end_layout

\begin_layout Subsubsection
HDF4/5 Raster Files not Supported
\end_layout

\begin_layout Standard
Are currently not supported by gvSIG OADE.
\end_layout

\begin_layout Subsubsection
ILWIS File Name Extension
\end_layout

\begin_layout Standard
ILWIS raster file output: gvSIG recognizes only ".mpl" as output extension.
 However, the actual file (as created by the GDAL driver that gvSIG uses)
 creates a .mpr file.
 This can be confusing when crying to create an ILWIS raster file, e.g.
 via "Save as" Raster Tool.
\end_layout

\begin_layout Standard
Solution: Do not specify an extension when saving an ILWIS raster.
 It will be set to .mpr automatically.
 
\end_layout

\begin_layout Subsubsection
JPEG2000 Files Poorly Supported
\end_layout

\begin_layout Standard
Support for JPEG2000 format raster data files is currently rudimentary at
 best.
 Most files in this format will probably not load correctly or not load
 at all.
\end_layout

\begin_layout Subsection
Raster Layer Handling
\end_layout

\begin_layout Subsubsection
Bleeding Raster Layers
\end_layout

\begin_layout Standard
When zooming to the full extent of a raster layer, a portion of it at the
 bottom sometimes seems to 
\begin_inset Quotes eld
\end_inset

bleed
\begin_inset Quotes erd
\end_inset

 downwards, i.e.
 the same horizontal line of pixels is displayed repeatedly.
\end_layout

\begin_layout Standard
Work-around: change the size of the View's window a little.
 This should refresh the raster and display it correctly.
 If this does not help, try creating a new View and loading the raster into
 that.
\end_layout

\begin_layout Subsubsection
Colour Table Tool Does Not List New gvSIG OADE Schemes
\end_layout

\begin_layout Standard
This version of gvSIG OADE comes with a set of customized, useful colour
 schemes, such as 
\begin_inset Quotes eld
\end_inset

slope
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

aspect
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

elevation
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

morphometry
\begin_inset Quotes erd
\end_inset

.
 If those do not show up in the Color Table Editor, then you must let gvSIG
 regenerate them.
\end_layout

\begin_layout Standard
Exit gvSIG, open the gvSIG settings folder (location differs: $HOME/gvSIG
 on *nix systems, C:
\backslash
Documents and Settings
\backslash
<username>
\backslash
gvSIG or similar on Windows) and move the file 
\begin_inset Quotes eld
\end_inset

palettes.xml
\begin_inset Quotes erd
\end_inset

 and the folder 
\begin_inset Quotes eld
\end_inset

colortable
\begin_inset Quotes erd
\end_inset

 to a different location.
\end_layout

\begin_layout Standard
Restart gvSIG.
 It should now regenerate the default colour schemes.
 If you have made your own changes to gvSIG's colour schemes library, then
 quit gvSIG again and merge those changes back into 
\begin_inset Quotes eld
\end_inset

palettes.xml
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

colortable
\begin_inset Quotes erd
\end_inset

.
 If not, you can now safely delete the copies of both.
\end_layout

\begin_layout Subsubsection
Raster Layers Display as Single Colour (Black) 
\begin_inset Quotes eld
\end_inset

Block
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
There are several possible causes for this:
\end_layout

\begin_layout Standard
The layer's band statistics may be wrong.
 Open the Properties menu on the layer in questions, go to the 
\begin_inset Quotes eld
\end_inset

General
\begin_inset Quotes erd
\end_inset

 tab and refresh the statistics manually.
\end_layout

\begin_layout Standard
It may also be necessary to adjust the color scaling (especially after refreshin
g band statistics as described above) to match the actual data range.
\end_layout

\begin_layout Standard
Large raster layers (10 megapixels and above) sometimes also don't display
 correctly when their View window is also large.
 All that will be shown is a block, with the correct extent of the raster
 but in just one single colour (more precisely: the first colour in the
 raster layer's colour table, often this will be black).
 Using the info tool and clicking in the 
\begin_inset Quotes eld
\end_inset

block
\begin_inset Quotes erd
\end_inset

 reveals that the raster values are correct, but the colour is not.
 This problem most often appears when the whole extent of a raster layer
 is to be displayed.
 Work-around: decrease the size of the View's window a little, until the
 raster displays correctly again.
\begin_inset Note Note
status open

\begin_layout Plain Layout
This does not happen so much with zoomed-in views, so it seems related to
 pixel numbers.
 But sometimes, the zoomed-in view also fails to display correctly.
 Tested this with the DNA maps in test.gvp.
\end_layout

\begin_layout Plain Layout
Needs testing on other OS/other graphics cards!
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Raster 
\begin_inset Quotes eld
\end_inset

Save as
\begin_inset Quotes erd
\end_inset

 fails
\end_layout

\begin_layout Standard
Saving as raster (using "Save as" from the rastertools or raster layer context
 menu) may fail with an unspecific error message if there are raster layers
 (in the same or another project view) that were switched to "hidden" when
 the project was first loaded and not switched to "visible" since then.
\end_layout

\begin_layout Standard
Solution: switch all raster layers to "visible" at least once to make sure
 their data is loaded.
 You can switch them back to "invisible" afterwards.
 
\end_layout

\begin_layout Subsubsection
Temporary Raster Layers Disappear
\end_layout

\begin_layout Standard
There is a bug in the Color Table tool that deletes temporary raster layers
 if the user chooses 
\begin_inset Quotes eld
\end_inset

Cancel
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsection
Reprojection and Spatial Reference Systems
\end_layout

\begin_layout Subsubsection
Update Error After Defining a User SRS
\end_layout

\begin_layout Standard
After entering a user SRS definition and clicking 
\begin_inset Quotes eld
\end_inset

Finish
\begin_inset Quotes erd
\end_inset

, the following error message appears: 
\begin_inset Quotes eld
\end_inset

Error updating user DB.
 Probably it is locked by another process
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
This is because you need write access to the directory 
\begin_inset Quotes eld
\end_inset

org.gvsig.crs
\begin_inset Quotes erd
\end_inset

 (in your gvSIG extensions directory) and the file 
\begin_inset Quotes eld
\end_inset

usr.script
\begin_inset Quotes erd
\end_inset

 contained therein.
 If you don't have write access, then you won't be able to create a new
 user-defined SRS.
\end_layout

\begin_layout Subsubsection
Zoom to Layer no Longer Working for Reprojected Data
\end_layout

\begin_layout Standard
It seems that the data extent is not always correctly updated after a reprojecti
on.
 In those cases, 
\begin_inset Quotes eld
\end_inset

Zoom to layer
\begin_inset Quotes erd
\end_inset

 will fail and display a wrong region.
 Use the manual zooming and panning tools to get the proper view.
\end_layout

\begin_layout Standard
If you wish to work more efficiently with a reprojected layer, use the Reproject
 tool (part of the Geoprocessing Tools) to permanently reproject a layer
 into a new shapefile.
\end_layout

\begin_layout Subsection
Remote Sensing Tools
\end_layout

\begin_layout Subsubsection
Remote Sensing Tools Unstable and Trouble Saving Output
\end_layout

\begin_layout Standard
The Remote Sensing Tools are experimental in this release.
 They include the following tools available from the Raster Tools menu:
\end_layout

\begin_layout Itemize
Map algebra 
\end_layout

\begin_layout Itemize
Classification 
\end_layout

\begin_layout Itemize
Decision trees 
\end_layout

\begin_layout Itemize
Mosaicking 
\end_layout

\begin_layout Itemize
Image fusion 
\end_layout

\begin_layout Itemize
PCA and Tasseled Cap transformations 
\end_layout

\begin_layout Itemize
Profiles
\end_layout

\begin_layout Itemize
Scatterplots
\end_layout

\begin_layout Standard
While they should mostly do what they are intended for, some problems still
 exist with file output.
 As an alternative, create a temporary layer and save it to a file using
 the "Save as" tool.
\end_layout

\begin_layout Standard
Note that most of the remote sensing tools have been designed to work on
 three-channel (RGB) input images and are likely to throw an error if you
 attempt to feed them a single-channel (including greyscale) raster layer.
\end_layout

\begin_layout Subsubsection
Image Fusion Tool Throws an Error (Brovey, IHS and A Trous)
\end_layout

\begin_layout Standard
The Brovey, IHS and A Trous Wavelet fusion modes work on three-channel,
 RGB raster layers only.
 Applying them to single-channel, greyscale layers will result in an error
 message.
\end_layout

\begin_layout Subsubsection
Profile Tool Throws 
\begin_inset Quotes eld
\end_inset

java.lang.ArrayIndexOutOfBoundsException
\begin_inset Quotes erd
\end_inset

 Error
\end_layout

\begin_layout Standard
The Profile tool is meant to be used on RGB image layers only.
 For other types of layers, use the profiling tools in SEXTANTE.
\end_layout

\begin_layout Subsubsection
Transformation Tool Throws 
\begin_inset Quotes eld
\end_inset

Out of Bounds
\begin_inset Quotes erd
\end_inset

 Error
\end_layout

\begin_layout Standard
When applied to a raster layer that is part of a group, the following error
 is generated:
\end_layout

\begin_layout LyX-Code
java.lang.IllegalArgumentException: setSelectedIndex: 0 out of bounds
\end_layout

\begin_layout Standard
Solution: move the layer out of any layer group before running the transformatio
n tool on it.
\end_layout

\begin_layout Subsubsection
Transformation Tool Produces Garbage (Principal Components)
\end_layout

\begin_layout Standard
The PCA transformation requires a layer with at least two bands to produce
 any meaningful result.
 Do not run it on single-band layers.
\end_layout

\begin_layout Subsection
SEXTANTE
\end_layout

\begin_layout Subsubsection
Missing manual pages
\end_layout

\begin_layout Standard
SEXTANTE comes with a lot of manual pages that can be read using the built-in
 help browser.
 If they are unavailable, then that is probably due to your operating system
 running in a language other than English.
\end_layout

\begin_layout Standard
To fix this, locate the folder 
\begin_inset Quotes eld
\end_inset

extensiones/es.unex.sextante/sextante_help
\begin_inset Quotes erd
\end_inset

 within your gvSIG installation folder.
 It contains a subfolder 
\begin_inset Quotes eld
\end_inset

en
\begin_inset Quotes erd
\end_inset

 with the English manual pages.
 Rename (or copy) that folder to the locale of your operating system.
 If you do not know the two-letter code for your locale, then you can look
 it up here: http://www.loc.gov/standards/iso639-2/php/code_list.php (under
 
\begin_inset Quotes eld
\end_inset

ISO 639-1 Code
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Subsubsection
Missing raster layers in dialogs
\end_layout

\begin_layout Standard
If raster layers are not showing up in some SEXTANTE dialogs (such as the
 Data browser, the Raster Extent settings), even though they have been loaded
 into the project, then they are most likely not activated (turned visible)
 in the View's layer list (TOC).
\end_layout

\begin_layout Standard
SEXTANTE can process inactive layers, but because of some limitations of
 the current gvSIG raster interface, it cannot do certain things with such
 layers, such as setting extents based on them.
\end_layout

\begin_layout Subsection
Spatial Reference Systems
\end_layout

\begin_layout Subsubsection
Dialog for User-defined SRS
\end_layout

\begin_layout Standard
The 
\begin_inset Quotes eld
\end_inset

Next
\begin_inset Quotes erd
\end_inset

 button does not show up on the second settings page (
\begin_inset Quotes eld
\end_inset

Datum
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Standard
Work around: Click on the 
\begin_inset Quotes eld
\end_inset

Coordinate system
\begin_inset Quotes erd
\end_inset

 tab instead to open the third settings page.
\end_layout

\begin_layout Subsubsection
Swiss National Grid System no Working
\end_layout

\begin_layout Standard
Attempting to set the projection to EPSG 21781 results in error: "java.lang.Except
ion: In proj4 Projection Oblique Mercator not admit azimut close to 90"
 (on another machine "java.lang.
 Exception: Invalid PROJ.4 setting: Oblique Mercator cannot set azimuth close
 to 90").
\end_layout

\begin_layout Standard
Solution: follow these instructions to create a custom SRS:
\end_layout

\begin_layout Standard
http://listserv.gva.es/pipermail/gvsig_internacional/2009-December/004311.html
\end_layout

\begin_layout Subsection
Symbology and Labels
\end_layout

\begin_layout Subsubsection
\begin_inset Quotes eld
\end_inset

Expression
\begin_inset Quotes erd
\end_inset

 Type Symbology Not Available for Joined Fields
\end_layout

\begin_layout Standard
Expression type symbology does not work for joined fields and will never
 in version 1.9 of gvSIG.
\end_layout

\begin_layout Subsubsection
\begin_inset Quotes eld
\end_inset

Interval
\begin_inset Quotes erd
\end_inset

 Type Symbology: Some Features Do Not Display After Applying Settings
\begin_inset Note Note
status open

\begin_layout Plain Layout
Bug can be provoked by using field 
\begin_inset Quotes eld
\end_inset

SHAPE_AREA
\begin_inset Quotes erd
\end_inset

 on /home/benni/Unterricht/Bern2010/Daten/10m-admin-0-countries/10m-admin-0-coun
tries.shp
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It seems that attribute table value outliers (extremely small or large values)
 sometimes mess up the calculation of interval classes.
 The result is that some features no longer fall into any class and will
 not be displayed.
 Also, attempting to open the Properties for such a vector layer after applying
 the faulty symbology will result in: 
\begin_inset Quotes eld
\end_inset

java.lang.ArrayIndexOutOfBoundsException: <number of classes>
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
First, when setting an interval type legend, click 
\begin_inset Quotes eld
\end_inset

Apply
\begin_inset Quotes erd
\end_inset

 to test it.
 If some features do not display, tick the 
\begin_inset Quotes eld
\end_inset

Other values
\begin_inset Quotes erd
\end_inset

 option and choose an easy to recognize colour.
 Then click 
\begin_inset Quotes eld
\end_inset

Apply
\begin_inset Quotes erd
\end_inset

 again to see which features are not being classified correctly.
\end_layout

\begin_layout Standard
Correct the interval scheme by double clicking into the 
\begin_inset Quotes eld
\end_inset

Value
\begin_inset Quotes erd
\end_inset

 column and setting interval widths manually as appropriate.
\end_layout

\begin_layout Subsubsection
\begin_inset Quotes eld
\end_inset

Interval
\begin_inset Quotes erd
\end_inset

 Type Symbology: Style for Other Values not Displayed Correctly
\end_layout

\begin_layout Standard
After changing the 
\begin_inset Quotes eld
\end_inset

Other values
\begin_inset Quotes erd
\end_inset

 symbol, the display on the 
\begin_inset Quotes eld
\end_inset

Symbology
\begin_inset Quotes erd
\end_inset

 tab is not updated correctly.
 Switch to another tab and then back to update it and show the correct,
 current settings for 
\begin_inset Quotes eld
\end_inset

Other values
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Label Fields Shifting
\end_layout

\begin_layout Standard
When deleting fields from a attribute table that is used for labelling,
 then the labelling field may switch unwantedly to another field.
\end_layout

\begin_layout Subsubsection
SVF Symbols Support
\end_layout

\begin_layout Standard
SVG symbols with embedded text are currently not supported.
 They will throw an error.
\end_layout

\begin_layout Subsubsection
Trying to Change the Symbol Style for a Vector Layer Throws 
\begin_inset Quotes eld
\end_inset

Null Pointer Error
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Go into the program Preferences, open the 
\begin_inset Quotes eld
\end_inset

Symbology
\begin_inset Quotes erd
\end_inset

 page and make sure the 
\begin_inset Quotes eld
\end_inset

Symbol images directory
\begin_inset Quotes erd
\end_inset

 setting points to a valid folder on your system.
\end_layout

\begin_layout Subsection
Tables and DBMS
\end_layout

\begin_layout Subsubsection
Attribute Table Editing
\end_layout

\begin_layout Standard
When editing a cell in the table view you need to change the entire value
 for it to be updated.
\end_layout

\begin_layout Standard
Selecting a number of characters within a string and changing the values
 does not work.
\end_layout

\begin_layout Subsubsection
Attribute Table Export
\end_layout

\begin_layout Standard
Problem: long text fields may get truncated when exporting a table to a
 DBase format file (
\begin_inset Quotes eld
\end_inset

Table->Export to
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Standard
Solution: export to an Excel spreadsheet instead, then load the result into
 a spreadsheet software and use that to create a DBase file output.
\end_layout

\begin_layout Subsubsection
Integer Fields Get Switched to Double Fields (DBase Tables)
\end_layout

\begin_layout Standard
Sometimes, newly created fields of type integer in a DBase (attribute) table
 are switched to floating point after stopping the editing mode.
 The reason for this is a limitation in the DBase format that can cause
 some headaches.
\end_layout

\begin_layout Standard
The DBase format does not specify an explicit encoding for integer type
 fields.
 Instead, it has a type Numeric which is ambiguous as it can store integer
 and floating point values.
 To guess which one it is, gvSIG checks whether the field (a) is declared
 with any decimal places, and (b) is longer than 9 digits.
 If either of the two is true, then type floating point is assumed.
 
\end_layout

\begin_layout Standard
So when creating a new integer field, make sure that its length is set to
 no more than 9.
 This is the default for new integer fields, but it is possible to set it
 higher (as other DBMS do not suffer from the same limitation), so beware.
\end_layout

\begin_layout Subsubsection
Joins (Multiple)
\end_layout

\begin_layout Standard
The prefixes for both the source and target table fields will be updated
 with the last setting for every join operation.
 This means that there can be problems in multiple join operations (joining
 from more than one table to the same table), if the the tables to join
 have fields with identical name.
\end_layout

\begin_layout Standard
GvSIG does attempt to adjust field names by prefixing them with "J", but
 this will only work for the second join.
 After that, name collisions are unavoidable.
 The only practical solution is to make sure that all tables you wish to
 join fields from have unique field names.
 
\end_layout

\begin_layout Subsubsection
ODBC Connection Asks for Host Settings
\end_layout

\begin_layout Standard
The ODBC connection GUI requires the user to fill in host name and port
 settings, even though these are not required for an ODBC connection.
 Just enter any dummy values to be able to continue.
\end_layout

\begin_layout Subsubsection
Cannot create a new Oracle table in gvSIG
\end_layout

\begin_layout Standard
There is a problem with the Oracle (closed source) Java driver and Java
 1.6 that has been noticed two years ago, but Oracle has failed to act on
 so far: http://forums.oracle.com/forums/thread.jspa?threadID=463496.
 The only viable solution seems to add the option 
\begin_inset Quotes eld
\end_inset

-Xss96
\begin_inset Quotes erd
\end_inset

 to the Java launching code (in 
\emph on
gvSIG.ini
\emph default
 on Windows, 
\emph on
gvSIG.sh/Info.plist
\emph default
 on Mac OS X or 
\emph on
gvSIG.sh
\emph default
 on Linux).
 This reduces Java's stacksize which is quite a sensitive thing for Java
 performance.
 We cannot guarantee that it will have other bad side-effects, either.
\end_layout

\begin_layout Standard
Sorry, but that's what happens if proprietary software vendors lose interest
 in a product.
 We recommend you upgrade your database system to PostgreSQL, for which
 the Java interface is actively developed and well suppport by the open
 source community.
\end_layout

\begin_layout Subsubsection
PostGIS Driver Character Encoding
\end_layout

\begin_layout Standard
Character encoding problems.
 Error message "Can`t initialize writer: POSTGIS Writer" pops up when trying
 to create a new PostGIS layer.
 Solution: use UTF-8 encoding for your PostgreSQL database.
 Other encodings do not seem to be supported at this moment (and what for?).
\end_layout

\begin_layout Subsection
Topology Extension
\end_layout

\begin_layout Subsubsection
No Undo/Redo in CAD Editor
\end_layout

\begin_layout Standard
Undo/redo and command history do not work when editing a layer that is part
 of a topology group.
\end_layout

\begin_layout Subsection
Vector Layers
\end_layout

\begin_layout Subsubsection
Adding a Vector Layer to a View Throws 
\begin_inset Quotes eld
\end_inset

Index out of bounds
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
There seems to be a problem with some combination(s) of settings for the
 
\begin_inset Quotes eld
\end_inset

layer ordering manager
\begin_inset Quotes erd
\end_inset

, a tool that tries to arrange newly added layers automatically in a clever
 way.
 The settings are in 
\begin_inset Quotes eld
\end_inset

View->Layer loading order->Smart order
\begin_inset Quotes erd
\end_inset

 of the gvSIG 
\begin_inset Quotes eld
\end_inset

Preferences
\begin_inset Quotes erd
\end_inset

 dialog.
 Try changing them to something simpler.
\end_layout

\begin_layout Subsubsection
Attempting To Create a New Shapefile Crashes
\end_layout

\begin_layout Standard
This happens if you directly type in a file name on the last page of the
 
\begin_inset Quotes eld
\end_inset

New layer
\begin_inset Quotes erd
\end_inset

 dialog and you do not provide a full path or a file of that name already
 exists in the path given.
 Use the file selection dialog (button [...]) to pick a path and filename.
 It works better.
\end_layout

\begin_layout Subsection
Vector Data Formats
\end_layout

\begin_layout Subsubsection
KML Geometries Do not Display
\end_layout

\begin_layout Standard
The KML parser that gvSIG uses can be somewhat restrictive regarding the
 KML version.
 It really only seems to accept Google Earth generated KML 2.1.
 This means that sometimes it will just skip perfectly valid geometries
 in a KML file and not display them, just because they are declared, e.g.
 as KML 2.0 or 2.2.
 To fix this, simply open the KML file in a text editor and change the XML
 provider tag (usually the second line in the file, right after the XML
 version tag).
 Delete the existing tag and replace it with simply this one: 
\end_layout

\begin_layout LyX-Code
<kml xmlns="http://earth.google.com/kml/2.1">
\end_layout

\begin_layout Subsection
WFS Client
\end_layout

\begin_layout Subsubsection
Quirks in the User Interface
\end_layout

\begin_layout Standard
In principle, WFS connections work well, but the user interface may not
 behave as expected.
\end_layout

\begin_layout Standard
Geometry types for layers not shown: Click once on a layer entry.
 This will retrieve the geometry type for the selected layer and display
 it.
\end_layout

\begin_layout Standard
Cannot select/deselect fields for import: After selecting a layer, press
 
\begin_inset Quotes eld
\end_inset

Next
\begin_inset Quotes erd
\end_inset

 to go to the field selection.
 Here, you should be able to select/deselect individual attribute table
 fields.
 In our tests (Linux) this did not work at all.
 Just press 
\begin_inset Quotes eld
\end_inset

Next
\begin_inset Quotes erd
\end_inset

 again to import all fields.
\end_layout

\begin_layout Standard
Cannot access attribute table for WFS layer from contect Menu: It is still
 possible to open the attribute table by activating the layer, then clicking
 on 
\begin_inset Quotes eld
\end_inset

Layer->Show attribute table
\begin_inset Quotes erd
\end_inset

 in the main menu, or by just pressing CTRL+T.
\end_layout

\begin_layout Section
Update 1
\end_layout

\begin_layout Standard
This will be done as an update style installer, which requires an existing
 installation of gvSIG and will overwrite/delete older files.
\end_layout

\begin_layout Standard
Always merge latest SVN entries.
 Last merged SVN entry: r33025 07/06/10 2:34 PM
\end_layout

\begin_layout Standard
Look into src-changes-vs-1.9-1253.txt and search for:
\end_layout

\begin_layout LyX-Code
*************************************
\end_layout

\begin_layout LyX-Code
*** BUGFIXES AFTER OADE 2010 1.0 ****
\end_layout

\begin_layout LyX-Code
*************************************
\end_layout

\begin_layout Standard
\SpecialChar \ldots{}
 everything following that must be merged into Update 1!
\end_layout

\begin_layout Standard
UPDATE JRE: R21 is out!
\end_layout

\begin_layout Standard
Find more mirrors.
\end_layout

\begin_layout Standard
Put source code on SVN.
\end_layout

\begin_layout Standard
Go through the support page and delete all fixes that no longer apply after
 the release of the Update!
\end_layout

\begin_layout Subsection
List of Files
\end_layout

\begin_layout Subsubsection
Common
\end_layout

\begin_layout Standard
OVERWRITE:
\end_layout

\begin_layout LyX-Code
bin/gvSIG/extensiones/com.iver.core/com.iver.core.jar
\end_layout

\begin_layout Subsubsection
Linux
\end_layout

\begin_layout Standard
DELETE:
\end_layout

\begin_layout LyX-Code
libs/libproj.so
\end_layout

\begin_layout LyX-Code
libs/libproj.so.0
\end_layout

\begin_layout LyX-Code
libs/libproj.so.0.6.6
\end_layout

\begin_layout Standard
OVERWRITE:
\end_layout

\begin_layout LyX-Code
libs/libcrsjniproj.so
\end_layout

\begin_layout LyX-Code
libs/libproj.so
\end_layout

\begin_layout LyX-Code
libs/libproj.so.0
\end_layout

\begin_layout LyX-Code
libs/libproj.so.0.5.2
\end_layout

\begin_layout Subsubsection
Mac OSX X
\end_layout

\begin_layout Standard
DELETE:
\end_layout

\begin_layout LyX-Code
Contents/Frameworks/libgdal copy.dylib
\end_layout

\begin_layout LyX-Code
Contents/Frameworks/libproj.dylib
\end_layout

\begin_layout LyX-Code
Contents/Frameworks/libproj.0.dylib
\end_layout

\begin_layout LyX-Code
Contents/Frameworks/libproj.0.6.6.dylib
\end_layout

\begin_layout Standard
OVERWRITE:
\end_layout

\begin_layout LyX-Code
Contents/Frameworks/libcrsjniproj.jnilib
\end_layout

\begin_layout LyX-Code
Contents/Frameworks/libproj.dylib
\end_layout

\begin_layout LyX-Code
Contents/Frameworks/libproj.0.dylib
\end_layout

\begin_layout LyX-Code
Contents/Frameworks/libproj.0.5.2.dylib
\end_layout

\begin_layout Subsubsection
Windows
\end_layout

\begin_layout Standard
DELETE:
\end_layout

\begin_layout LyX-Code
jre/binlibjgdal092.dll
\end_layout

\begin_layout LyX-Code
jre/binlibcrsjniproj.dll
\end_layout

\begin_layout Standard
OVERWRITE:
\end_layout

\begin_layout LyX-Code
jre/bin/crsjniproj.dll
\end_layout

\begin_layout LyX-Code
jre/bin/libproj-0.dll
\end_layout

\begin_layout Subsection
Windows Shit
\end_layout

\begin_layout Subsubsection
MSYS binaries not found
\end_layout

\begin_layout Standard
For some reason, the MSYS binaries and DLLs are not found when running GRASS
 modules.
 This makes e.g.
 r.mapcalculator fail, as it does not find sed.exe.
 Can also be tested with r.shaded.relief: output will be there, but GRASS
 console will show that awk was not found.
 Test if this problem also exists on Windows XP.
\end_layout

\begin_layout Standard
Simple work-around:
\end_layout

\begin_layout Standard
Add <path to gvSIG>
\backslash
msys
\backslash
bin to the system's or user's PATH variable.
\end_layout

\begin_layout Subsubsection
Save to raster fails
\end_layout

\begin_layout Standard
Windows XP SP3: there has been a complaint on the mailing list, that saving
 to raster fails on that 
\begin_inset Quotes eld
\end_inset

operating system
\begin_inset Quotes erd
\end_inset

.
 Problem is due to DLLs not being loaded.
 Can this be reproduced?
\end_layout

\begin_layout Subsection
Installer
\end_layout

\begin_layout Standard
Bring back the old check for existing configuration files (?).
 Check if automatic copying of missing files works for existing configurations.
\end_layout

\begin_layout Standard
Add a new heap size option in installer : "Default" to let the shipped JVM
 figure out its settings automatically (http://java.sun.com/javase/6/webnotes/6u18.
html).
\end_layout

\begin_layout Standard
Create a German version, with DAI sponsor logo, which also sets German as
 default Andami language.
\end_layout

\begin_layout Standard
Windows launcher icon is different (lacks "OADE" label)
\end_layout

\begin_layout Standard
Linux: menu entries, file associations.
\end_layout

\begin_layout Subsection
Knowledge Base
\end_layout

\begin_layout Standard
Add a section on memory settings.
\end_layout

\begin_layout Subsection
Release Notes
\end_layout

\begin_layout Subsection
Startup Scripts
\end_layout

\begin_layout Standard
Windows: hide the cmd.exe window.
\end_layout

\begin_layout Subsection
Bug fixes and enhancements
\end_layout

\begin_layout Subsubsection
CAD Extension
\end_layout

\begin_layout Standard
Configurable number of decimal places for coordinate display.
\end_layout

\begin_layout Standard
Look into basic Z editing support.
\end_layout

\begin_layout Subsubsection
General GUI
\end_layout

\begin_layout Standard
Keyboard shortcuts (CTRL + KEY) do not work for all functions.
\end_layout

\begin_layout Standard
Restore (larger) default size of layer Properties window: right now it's
 too small to fit in the options for chart type symbology.
\end_layout

\begin_layout Standard
Make Project manager a properly resizable window.
 Let user change the order of displayed documents.
\end_layout

\begin_layout Standard
Add configurable number of decimal places to be shown in coordinates status
 bar (it currently does automatic switching between 
\begin_inset Quotes eld
\end_inset

0
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

2
\begin_inset Quotes erd
\end_inset

, depending on zoom level).
\end_layout

\begin_layout Subsubsection
Georeferencer
\end_layout

\begin_layout Standard
Fix numeric fields in GUI: which one should be editable?
\end_layout

\begin_layout Standard
Display proper 
\begin_inset Quotes eld
\end_inset

0
\begin_inset Quotes erd
\end_inset

 for RMS if < 4 points are specified.
\end_layout

\begin_layout Subsubsection
GPS Extension
\end_layout

\begin_layout Standard
Need to get some feedback about whether this one actually works.
\end_layout

\begin_layout Standard
The GPS settings panel has CTRL+G assigned as a short cut, but that's already
 assigned to the Geodatabases manager!
\end_layout

\begin_layout Subsubsection
GRASS
\end_layout

\begin_layout Paragraph
General interface
\end_layout

\begin_layout Standard
Remember and restore the last directory for the file browser.
\end_layout

\begin_layout Standard
Write GRASS history file output into gvSIG layer XML metadata.
\end_layout

\begin_layout Standard
Can we make use of the categories file?
\end_layout

\begin_layout Paragraph
r.in.xyz
\end_layout

\begin_layout Standard
ERROR: Automatic 
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset

 quoting of parameter values with spaces fails in this particular case:
 when entering 
\begin_inset Quotes eld
\end_inset

 
\begin_inset Quotes eld
\end_inset

 (Space) as quoted separator, the result is 
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset

 
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset

, which looks like two empty string values to the GRASS parser.
 
\end_layout

\begin_layout Standard
SOLUTION: padd with quotes only if they don't already exist.
\end_layout

\begin_layout Standard
WORK-AROUND: use '' (single quotes) for now.
\end_layout

\begin_layout Standard
Usage hints:
\end_layout

\begin_layout Enumerate
Enclose separator character in 
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset

.
 Otherwise there will be a bogus error message about the output map not
 being found.
\end_layout

\begin_layout Enumerate
When using the 
\begin_inset Quotes eld
\end_inset

-s
\begin_inset Quotes erd
\end_inset

 flag to print the extent, there will be a bogus error message complaining
 about the output file not being found.
 It can be safely ignored.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Could also be fixed in the module interface code, though.
 Just don't attempt a clean-up after running this module with the 
\begin_inset Quotes eld
\end_inset

-s
\begin_inset Quotes erd
\end_inset

 flag.
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
The method=n and type=CELL options are probably not what's wanted in most
 cases (module default is actually method=mean and type =FCELL
\begin_inset Note Note
status open

\begin_layout Plain Layout
why does the default not come up in the selection box? Need to add support
 for default string type answers in the widget?
\end_layout

\end_inset

).
\end_layout

\begin_layout Paragraph
r.resamp.rst
\end_layout

\begin_layout Standard
Always throws an error: ERROR: input map resolution differs from current
 region resolution! Even if region is set to be read from input map.
\end_layout

\begin_layout Paragraph
Include v.surf.icw
\end_layout

\begin_layout Paragraph
New script v.extract.unique
\end_layout

\begin_layout Standard
Use a combination of 
\begin_inset Quotes eld
\end_inset

v.db.select where=UNIQUE
\begin_inset Quotes erd
\end_inset

 and v.extract to split a shapefile into 
\emph on
n
\emph default
 new ones, depending on how many unique values a field has.
\end_layout

\begin_layout Subsubsection
Preferences page
\end_layout

\begin_layout Standard
When using the file selector to browse for a new 
\begin_inset Quotes eld
\end_inset

Symbol
\begin_inset Quotes erd
\end_inset

 directory, the setting for 
\begin_inset Quotes eld
\end_inset

Template
\begin_inset Quotes erd
\end_inset

 directory gets updated instead [FIXED].
\end_layout

\begin_layout Subsubsection
Map Production
\end_layout

\begin_layout Standard
The framing rectangle does not fit for scale bars with 0 places left of
 
\begin_inset Quotes eld
\end_inset

0
\begin_inset Quotes erd
\end_inset

 (it's shifted to far to the right; it's OK in the PDF output, though!).
\end_layout

\begin_layout Standard
Input field for 
\begin_inset Quotes eld
\end_inset

Intervals left of 0
\begin_inset Quotes erd
\end_inset

 has strange deletion/resetting behavior.
\end_layout

\begin_layout Standard
TEST full map layout tools and save layout -> any error messages?
\end_layout

\begin_layout Standard
BUG: On-the-fly reprojected vector layers showing up wrong in PDF export
 
\end_layout

\begin_layout Standard
BUG: Raster layers with transparency showing up wrong in PDF export (big,
 opaque rectangle on top of data)
\end_layout

\begin_layout Subsubsection
DBF encoding
\end_layout

\begin_layout Standard
There is a bug which will lead to the default encoding not being set for
 new shapefile layers.
\end_layout

\begin_layout Standard
There is also a fix being worked on here:
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://forge.osor.eu/tracker/index.php?func=detail&aid=13075&group_id=89&atid=732
\end_layout

\end_inset


\end_layout

\begin_layout Standard
However, so far setting the default encoding to e.g.
 CP1252 (Win Latin-1) will produce a UTF-8 encoded DBF attribute table.
\end_layout

\begin_layout Subsubsection
Mac OS X improvements
\end_layout

\begin_layout Itemize
Compile the binaries on an older version of Mac OS X (?)
\end_layout

\begin_layout Itemize
Improve the startup and Mac menu bar appearance
\end_layout

\begin_layout Subsubsection
PostGIS
\end_layout

\begin_layout Standard
This patch:
\end_layout

\begin_layout LyX-Code
libFMap/src/com/iver/cit/gvsig/fmap/drivers/ [THIS PATCH WAS SENT TO THE
 OSOR BUG TRACKER]
\end_layout

\begin_layout LyX-Code
	DefaultJDBCDriver.java:
\end_layout

\begin_layout LyX-Code
		ca.
 line 415: added a call to refresh feature IDs.
\end_layout

\begin_layout LyX-Code
		This allows e.g.
 several PostGIS clients accessing the same layer,
\end_layout

\begin_layout LyX-Code
		w/o one falling over:
\end_layout

\begin_layout LyX-Code
		    public void close() {
\end_layout

\begin_layout LyX-Code
			    // reload hashRelate
\end_layout

\begin_layout LyX-Code
    			try {
\end_layout

\begin_layout LyX-Code
		    	    doRelateID_FID();
\end_layout

\begin_layout LyX-Code
		    	} catch (DBException e) {
\end_layout

\begin_layout LyX-Code
		    	    throw new RuntimeException(e);
\end_layout

\begin_layout LyX-Code
    			}    	
\end_layout

\begin_layout LyX-Code
		    }
\end_layout

\begin_layout LyX-Code
		[..]
\end_layout

\begin_layout Standard
Needs to be reversed: it does nothing good and breaks the Oracle driver.
\end_layout

\begin_layout Standard
The close() function should be reverted to just:
\end_layout

\begin_layout LyX-Code
		    public void close() {
\end_layout

\begin_layout LyX-Code
		    }
\end_layout

\begin_layout Standard
This has just been done in SVN (SF).
 It hase been confirmed to restore functionality with the Oracle driver.
 Also need to test concurrent editing with PostGIS one more time.
 Documented on the gvSIG support page.
\end_layout

\begin_layout Paragraph
CartoLab Patches
\end_layout

\begin_layout Standard
CartoLab has sent a series of patches for gvSIG 1.10 to the OSOR bug tracker
 (email sent 08/10/2010, 07:36 PM by Andres Maneiro, titled 
\begin_inset Quotes eld
\end_inset

Several patches for PostGIS driver
\begin_inset Quotes erd
\end_inset

):
\end_layout

\begin_layout Standard
NOTE: These patches have been saved into Projekte/OADIGITAL/gvSIG-dev-support/up
date1.
 For Update 1, check if they are in SVN.
 If not, apply them.
\end_layout

\begin_layout Standard
[#14537] Unable to export to postgis when a field called gid already exists:
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://forge.osor.eu/tracker/?func=detail&aid=14537&group_id=89&atid=732
\end_layout

\end_inset

: 
\end_layout

\begin_layout Standard
OK.
 Before the patch, the PostGIS ID field would always be 
\begin_inset Quotes eld
\end_inset

gid
\begin_inset Quotes erd
\end_inset

, even if such a field already existed.
 And then it wouldn't be possible to add it, leading to an error message.
 However, an even better solution would include a warnnig message about
 this.
 Because some application (like ZigGIS) always assume that 
\begin_inset Quotes eld
\end_inset

gid
\begin_inset Quotes erd
\end_inset

 is the geometry index field.
\end_layout

\begin_layout Standard
[#14556] Geoproceso recortar capas desde postgis consola error: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://forge.osor.eu/tracker/index.php?func=detail&aid=14556&group_id=89&atid=732
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
SEEMS OK.
 Another bug fixes.
 But tickets are all in Spanish, so not sure what it actually does.
\end_layout

\begin_layout Standard
[#14555] Postgis driver: while create new layer, generate gid name taking
 into account other fields names: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://forge.osor.eu/tracker/index.php?func=detail&aid=14555&group_id=89&atid=732
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
OK.
 Basically does wht the first patch does for new layers.
\end_layout

\begin_layout Standard
[#14554] Don't allow user to leave blank the name of a layer to export:
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://forge.osor.eu/tracker/index.php?func=detail&aid=14554&group_id=89&atid=732
\end_layout

\end_inset


\end_layout

\begin_layout Standard
OK.
 Straight bug fix.
\end_layout

\begin_layout Standard
[#14547] Several errorDialog are launched for the same exception: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://forge.osor.eu/tracker/index.php?func=detail&aid=14547&group_id=89&atid=732
\end_layout

\end_inset


\end_layout

\begin_layout Standard
OK.
 Straight bug fix.
\end_layout

\begin_layout Standard
[#14546] PostGIS Driver should be case sensitive: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://forge.osor.eu/tracker/index.php?func=detail&aid=14546
\end_layout

\end_inset


\end_layout

\begin_layout Standard
SEEMS OK.
 It introduces quoting for case-sensitivity which is reasonable.
\end_layout

\begin_layout Standard
[#14308] Lost connection after every SQL fail: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://forge.osor.eu/tracker/index.php?func=detail&aid=14308
\end_layout

\end_inset


\end_layout

\begin_layout Standard
SEEMS OK.
 Goes with the patch above.
\end_layout

\begin_layout Standard
[#14545] Postgis driver: show only tables the user has privileges over:
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://forge.osor.eu/tracker/index.php?func=detail&aid=14545&group_id=89&atid=790
\end_layout

\end_inset


\end_layout

\begin_layout Standard
SEEMS OK.
\end_layout

\begin_layout Standard
[#14400] No reconoce el tipo de datos smallint: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://forge.osor.eu/tracker/index.php?func=detail&aid=14400
\end_layout

\end_inset


\end_layout

\begin_layout Standard
OK.
 Straight bugfix.
\end_layout

\begin_layout Paragraph
3D Features
\end_layout

\begin_layout Standard
There is talk on the bug tracker about problem with the 
\begin_inset Quotes eld
\end_inset

Z
\begin_inset Quotes erd
\end_inset

 coordinate:
\end_layout

\begin_layout LyX-Code
Bugs item #14592, was opened at 2010-08-25 13:20
\end_layout

\begin_layout LyX-Code
You can respond by visiting: 
\end_layout

\begin_layout LyX-Code
http://forge.osor.eu/tracker/?func=detail&atid=732&aid=14592&group_id=89
\end_layout

\begin_layout LyX-Code
Or by replying to this e-mail entering your response between the following
 markers: 
\end_layout

\begin_layout LyX-Code
#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+
\end_layout

\begin_layout LyX-Code
(enter your response here)
\end_layout

\begin_layout LyX-Code
#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+
\end_layout

\begin_layout LyX-Code
Status: Open
\end_layout

\begin_layout LyX-Code
Priority: 3
\end_layout

\begin_layout LyX-Code
Submitted By: Paqui Mercade (pmercade)
\end_layout

\begin_layout LyX-Code
Assigned to: Nobody (None)
\end_layout

\begin_layout LyX-Code
Summary: gvSIG can not read a 3d PostGIS layers 
\end_layout

\begin_layout LyX-Code
Has patch: None
\end_layout

\begin_layout LyX-Code
SubprojectVersion: None
\end_layout

\begin_layout LyX-Code
Version: None
\end_layout

\begin_layout LyX-Code
SubprojectResolveVersion: None
\end_layout

\begin_layout LyX-Code
Component: gvSIG - PostGIS
\end_layout

\begin_layout LyX-Code
SubprojectName: None
\end_layout

\begin_layout LyX-Code
Severity: major
\end_layout

\begin_layout LyX-Code
Resolution: None
\end_layout

\begin_layout LyX-Code
OperatingSystem: Windows
\end_layout

\begin_layout LyX-Code
URL: 
\end_layout

\begin_layout LyX-Code
Keywords: 3D
\end_layout

\begin_layout LyX-Code
SubprojectResolveBuildNumber: 
\end_layout

\begin_layout LyX-Code
SubprojectBuildNumber: 
\end_layout

\begin_layout LyX-Code
BuildNumber: 1258
\end_layout

\begin_layout LyX-Code
Initial Comment:
\end_layout

\begin_layout LyX-Code
If you try to load a PostGIS layer 3d, error console appears.
\end_layout

\begin_layout LyX-Code
I think that, gvSIG reads the third coordinate as a coordinate "M" being
 one coordinate "Z".
\end_layout

\begin_layout LyX-Code
----------------------------------------------------------------------
\end_layout

\begin_layout LyX-Code
You can respond by visiting: 
\end_layout

\begin_layout LyX-Code
http://forge.osor.eu/tracker/?func=detail&atid=732&aid=14592&group_id=89
\end_layout

\begin_layout Standard
And here:
\end_layout

\begin_layout LyX-Code
Bugs item #14591, was opened at 2010-08-25 13:09
\end_layout

\begin_layout LyX-Code
You can respond by visiting: 
\end_layout

\begin_layout LyX-Code
http://forge.osor.eu/tracker/?func=detail&atid=732&aid=14591&group_id=89
\end_layout

\begin_layout LyX-Code
Or by replying to this e-mail entering your response between the following
 markers: 
\end_layout

\begin_layout LyX-Code
#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+
\end_layout

\begin_layout LyX-Code
(enter your response here)
\end_layout

\begin_layout LyX-Code
#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+#+
\end_layout

\begin_layout LyX-Code
Status: Open
\end_layout

\begin_layout LyX-Code
Priority: 3
\end_layout

\begin_layout LyX-Code
Submitted By: Paqui Mercade (pmercade)
\end_layout

\begin_layout LyX-Code
Assigned to: Nobody (None)
\end_layout

\begin_layout LyX-Code
Summary:  The 3d shp incorrectly exported from gvsig to PostGIS 
\end_layout

\begin_layout LyX-Code
Has patch: None
\end_layout

\begin_layout LyX-Code
SubprojectVersion: None
\end_layout

\begin_layout LyX-Code
Version: gvSIG - 1.10.0
\end_layout

\begin_layout LyX-Code
SubprojectResolveVersion: None
\end_layout

\begin_layout LyX-Code
Component: gvSIG - PostGIS
\end_layout

\begin_layout LyX-Code
SubprojectName: None
\end_layout

\begin_layout LyX-Code
Severity: None
\end_layout

\begin_layout LyX-Code
Resolution: None
\end_layout

\begin_layout LyX-Code
OperatingSystem: None
\end_layout

\begin_layout LyX-Code
URL: 
\end_layout

\begin_layout LyX-Code
Keywords: 
\end_layout

\begin_layout LyX-Code
SubprojectResolveBuildNumber: 
\end_layout

\begin_layout LyX-Code
SubprojectBuildNumber: 
\end_layout

\begin_layout LyX-Code
BuildNumber: 1258
\end_layout

\begin_layout LyX-Code
Initial Comment:
\end_layout

\begin_layout LyX-Code
You export a 3D Shp  to PostGIS.
\end_layout

\begin_layout LyX-Code
Upload layer exported from gvSIG.
\end_layout

\begin_layout LyX-Code
Go to properties of the layer.
\end_layout

\begin_layout LyX-Code
You can see that the properties says that the shp is 2d
\end_layout

\begin_layout LyX-Code
----------------------------------------------------------------------
\end_layout

\begin_layout LyX-Code
You can respond by visiting: 
\end_layout

\begin_layout LyX-Code
http://forge.osor.eu/tracker/?func=detail&atid=732&aid=14591&group_id=89
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
THIS ISSUE !!!MUST!!! BE FIXED FOR UPDATE!!!
\end_layout

\begin_layout Subsubsection
Raster Layers
\end_layout

\begin_layout Itemize
Windows XP, opened NC sample data project, created a temporary layer with
 SEXTANTE, used 
\begin_inset Quotes eld
\end_inset

Save as
\begin_inset Quotes erd
\end_inset

 from context menu to export into GeoTIFF file: bogus error message about
 not being able to write to project file.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Seems fine with a different project file.
\end_layout

\end_inset

 -> this may be a problem, when the original layer is read-only.
\end_layout

\begin_layout Itemize
Ungrouping a layer removes its colour table.
\end_layout

\begin_layout Itemize
use GDAL 1.7.2
\end_layout

\begin_layout Itemize
Make sure extensions for all supported GDAL formats are supported by the
 file selector: IGE (large IMAGINE files: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://home.gdal.org/projects/imagine/ige_format.html
\end_layout

\end_inset

)!
\end_layout

\begin_layout Itemize
Need to be able to set output options when reprojection: COMPRESSION, TFW,
 etc.
\end_layout

\begin_layout Paragraph
Crash on Zoom
\end_layout

\begin_layout Standard
GvSIG crashes when zooming into full 100m CORINE raster.
 Dough!
\end_layout

\begin_layout Paragraph
Color table
\end_layout

\begin_layout Standard
Raster layers lose customized color table when moved into a group.
\end_layout

\begin_layout Paragraph
Select raster layer
\end_layout

\begin_layout Standard
"Select raster layers" tool throws an error if one of the raster layers
 in the View has an invalid file link (e.g.
 file was deleted on disk).
 Guard against NULL value here.
\end_layout

\begin_layout LyX-Code
java.lang.NullPointerException
\end_layout

\begin_layout LyX-Code
at org.gvsig.rastertools.selectrasterlayer.SelectImageListener.select(SelectImageList
ener.java:98)
\end_layout

\begin_layout LyX-Code
at org.gvsig.rastertools.selectrasterlayer.SelectImageListener.point(SelectImageListe
ner.java:78)
\end_layout

\begin_layout LyX-Code
at com.iver.cit.gvsig.fmap.tools.Behavior.PointBehavior.mouseReleased(PointBehavior.java:
99)
\end_layout

\begin_layout LyX-Code
at com.iver.cit.gvsig.fmap.tools.CompoundBehavior.mouseReleased(CompoundBehavior.java:27
5)
\end_layout

\begin_layout LyX-Code
at com.iver.cit.gvsig.fmap.MapControl$MapToolListener.mouseReleased(MapControl.java:147
1)
\end_layout

\begin_layout Paragraph
Georeferencer: 1st order polynomial resampling
\end_layout

\begin_layout Standard
Transcript of email and my answer:
\end_layout

\begin_layout LyX-Code
Hi Ernesto,
\end_layout

\begin_layout LyX-Code
did you try different interpolation methods for the
\end_layout

\begin_layout LyX-Code
resampling?
\end_layout

\begin_layout LyX-Code
Tracing the error message you sent, I find
\end_layout

\begin_layout LyX-Code
some code in Grid.java, which does this:
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
line 198:
\end_layout

\begin_layout LyX-Code
  init(null);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
then, in line 329 (method init()):
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
  this.dataSource = ds.getDataSource();
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
So it passes a null object to init(), which then tries to
\end_layout

\begin_layout LyX-Code
execute a method from the null object.
 This must necessarily
\end_layout

\begin_layout LyX-Code
lead to the error message you are getting.
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
Further down in init(), I find:
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
 if (ds == null)
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
which guards against null objects, but it's too late at that
\end_layout

\begin_layout LyX-Code
point.
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
Could you please try this with gvSIG 1.10 (which is the
\end_layout

\begin_layout LyX-Code
version that OADE 2010 is based on)? Also, is there any
\end_layout

\begin_layout LyX-Code
chance you could send me a copy of the file that fails,
\end_layout

\begin_layout LyX-Code
plus your control points, so I can test this for myself?
\end_layout

\begin_layout LyX-Code
Best,
\end_layout

\begin_layout LyX-Code
Ben
\end_layout

\begin_layout LyX-Code
----- Original Message -----
\end_layout

\begin_layout LyX-Code
> > I report a bug concerning raster georeferencing tool in gvSIG OADE
\end_layout

\begin_layout LyX-Code
> > 2010: I want to apply a polinomial 1st order transformation to an
\end_layout

\begin_layout LyX-Code
> > image in jpg format, using four GCP, but as soon as I apply, the
\end_layout

\begin_layout LyX-Code
> > process fails (fatal error).
\end_layout

\begin_layout LyX-Code
> > 
\end_layout

\begin_layout LyX-Code
> > DEBUG Thread-31 org.gvsig.raster.util.RasterToolsUtil - An exception
\end_layout

\begin_layout LyX-Code
> > (fatal error) has been encountered.
\end_layout

\begin_layout LyX-Code
> > The process was aborted.
\end_layout

\begin_layout LyX-Code
> > See file 'gvSIG.log' for more information.
\end_layout

\begin_layout LyX-Code
> > java.lang.NullPointerException at
\end_layout

\begin_layout LyX-Code
> > org.gvsig.raster.grid.Grid.init(Grid.java:329) at
\end_layout

\begin_layout LyX-Code
> > org.gvsig.raster.grid.Grid.<init>(Grid.java:198) at
\end_layout

\begin_layout LyX-Code
> > org.gvsig.georeferencing.process.GeoreferencingProcess.process(GeoreferencingProc
ess.java:175)
\end_layout

\begin_layout LyX-Code
> > at org.gvsig.raster.RasterProcess.execute(RasterProcess.java:126)
\end_layout

\begin_layout LyX-Code
> > at org.gvsig.raster.RasterProcess.run(RasterProcess.java:139)
\end_layout

\begin_layout LyX-Code
> > at java.lang.Thread.run(Unknown Source)
\end_layout

\begin_layout LyX-Code
> > 
\end_layout

\begin_layout LyX-Code
> > The same identical procedure, using the same data, works fine on gvsig
\end_layout

\begin_layout LyX-Code
> > 1.9; the process works on gvSIG OADE only if I choose "affine"
\end_layout

\begin_layout LyX-Code
> > transformation: in this case, obviously, the transformation is applied
\end_layout

\begin_layout LyX-Code
> > "on the fly" on the original image file and no new file (resampled)
 is
\end_layout

\begin_layout LyX-Code
> > created.
 Best regards
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
This looks like a patch is required.
 Probably need to guard against NULL objects higher up, and then the create
 a new DataSource object if 
\begin_inset Quotes eld
\end_inset

ds
\begin_inset Quotes erd
\end_inset

 is NULL.
 The problem also exists in gvSIG 1.10, so this must be a regression introduced
 after 1.9.
 Test data is in in 
\begin_inset Quotes eld
\end_inset

Update1
\backslash
test_data
\begin_inset Quotes erd
\end_inset

 (orto.csv and orto_NG.jpg).
\end_layout

\begin_layout Standard
A new ticket (#14632) was filed to osor.eu for this:
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://forge.osor.eu/tracker/?func=detail&aid=14632&group_id=89&atid=732
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
BYTE type rasters
\end_layout

\begin_layout Standard
The patch to interpret 
\begin_inset Quotes eld
\end_inset

byte
\begin_inset Quotes erd
\end_inset

 raster data as 
\begin_inset Quotes eld
\end_inset

short
\begin_inset Quotes erd
\end_inset

 was turned down for the following reasons:
\end_layout

\begin_layout LyX-Code
Comment By: Nacho Brodin (nbrodin)
\end_layout

\begin_layout LyX-Code
Date: 2010-08-19 11:05
\end_layout

\begin_layout LyX-Code
Message:
\end_layout

\begin_layout LyX-Code
I think it is not a good idea for the next reasons:
\end_layout

\begin_layout LyX-Code
- All byte images will spend more memory (twice more)
\end_layout

\begin_layout LyX-Code
- Rendering 16 bits images a enhanced filter is applied automatically.
 gvSIG will turn more slowly rendering byte images.
\end_layout

\begin_layout LyX-Code
- Processes that use byte rasters will turn more slowly.
\end_layout

\begin_layout LyX-Code
- The data type of byte rasters will change to short and all tools won't
 work fine (exports processes, raster properties, ...)
\end_layout

\begin_layout LyX-Code
- The last gvSIG build had some changes to read all byte rasters as unsigned
 byte.
 I know that we lost the possibility of read signed bytes but for the moment
 if it is good for Gdal is good for us.
 gvSIG should behave now as Openev.
\end_layout

\begin_layout Standard
\SpecialChar \ldots{}
 so official gvSIG will not be able to handle signed byte type images.
 Great.
 Is this really what GDAL and OpenEV do, too? Test import into GRASS via
 r.in.gdal! Also, create a BYTE type image with GRASS and check if it really
 leads to significant problems: rater stats? export troubles? All other
 things pointed out by Nacho are merely performance-related -> not critical.
 If nothing critical turns up, then the patch will stay in gvSIG OADE and
 I'll make a note about the bad performance of BYTE type rasters on the
 web page.
\end_layout

\begin_layout Subsubsection
Remote Sensing Extension
\end_layout

\begin_layout Standard
Make Map Calculator and Decision Tree tools work.
\end_layout

\begin_layout Standard
Crashes if the Feathering option is selected, even if it was unselected
 again afterwards.
\end_layout

\begin_layout Standard
Advise users that these tools can consume a lot of memory.
 It is a good idea to create a new View, load only one image to be processed
 at a time into it and close all other Views while processing.
 GvSIG releases memory for layers that are not visible.
\end_layout

\begin_layout Paragraph
Image fusion
\end_layout

\begin_layout Standard
A trous wavelets fusion fails on a Landsat7 image with three bands.
 It worked before! What's the problem now?
\end_layout

\begin_layout LyX-Code
java.lang.ArrayIndexOutOfBoundsException: 64
\end_layout

\begin_layout LyX-Code
at org.gvsig.raster.grid.filter.histogramMatching.HistogramMatchingFilter.searchInHisto
gramReference (HistogramMatchingfilter.java:182)
\end_layout

\begin_layout LyX-Code
at org.gvsig.raster.grid.filter.histogramMatching.HistogramMatchingFilter.pre (Histogra
mMatchingfilter.java:118)
\end_layout

\begin_layout LyX-Code
at org.gvsig.raster.grid.filter.RasterFilter.execute (RasterFilter.java:186)
\end_layout

\begin_layout LyX-Code
\SpecialChar \ldots{}

\end_layout

\begin_layout Standard
Presence of other raster layers? Vector layers in the same view? Is it possible
 that this works only if the high resolution image is also multi-channel?
\end_layout

\begin_layout Paragraph
Brovey fusion
\end_layout

\begin_layout Standard
Brovey process no longer seems to produce anything at all! It may be running
 out of memory...
 [in fact: it is]
\end_layout

\begin_layout Paragraph
Mosaicking tool
\end_layout

\begin_layout Standard
Mosaic: Does not "see" layers in groups.
 Will complain about not enough multi-band layers, if some of them are in
 a group.
\end_layout

\begin_layout Paragraph
Scatterplot
\end_layout

\begin_layout Standard
Scatterplot: seems to be no longer working.
 Can select bands for axes, but nothing gets displayed (?)
\end_layout

\begin_layout Subsubsection
Reprojection
\end_layout

\begin_layout Standard
After reprojection, double fields are saved as integer fields (F***)!
\end_layout

\begin_layout Paragraph
Better translation
\end_layout

\begin_layout Standard
Review the code in extRasterTools-SE/src/org/gvsig/rastertools/reproject/\SpecialChar \ldots{}
:
 many, many untranslated strings in all source files: FIX!
\end_layout

\begin_layout Paragraph
Warn when trying to reproject between non-EPSG defs
\end_layout

\begin_layout Standard
Currently, the JNI-code for reprojection in the rastertools just calls a
 wrapped version of GDAL's 
\begin_inset Quotes eld
\end_inset

gdalwarp
\begin_inset Quotes erd
\end_inset

 using the 
\begin_inset Quotes eld
\end_inset

EPSG:XXXX
\begin_inset Quotes erd
\end_inset

 format for both s_srs and t_srs.
 Naturally, this fails miserably for any user defined SRS, ESRI code, etc.
\end_layout

\begin_layout Standard
Fix: display an error if the source and target definitions are not EPSG
 and refuse to continue.
\end_layout

\begin_layout Subsubsection
Support reprojection from/to non-EPSG CRS
\end_layout

\begin_layout Standard
Naturally, it would be much better, if non-EPSG SRS defs could be resolved
 to e.g.
 WKT strings and then passed in that form to gdalwarp, but this requires
 modifications to the JNI code (ugh!).
\end_layout

\begin_layout Standard
Actually, the user CRS are directly saved as PROJCS strings, and those could
 easily be passed to the 
\begin_inset Quotes eld
\end_inset

gdalwarp
\begin_inset Quotes erd
\end_inset

 wrapper.
 Excerpt from 
\begin_inset Quotes eld
\end_inset

usr.script
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout LyX-Code
INSERT INTO USR VALUES(3,'PROJCS["kosovo", GEOGCS["kosovo", DATUM["D_GRS_1980",
 SPHEROID["GRS_1980", 6378137.0, 298.257222101]], PRIMEM["Greenwich", 0.0],
 UNIT["Degree", 0.017453292519943295]], PROJECTION["Transverse_Mercator"],
 PARAMETER["central_meridian", 21.0], PARAMETER["latitude_of_origin", 0.0],
 PARAMETER["scale_factor", 0.9999], PARAMETER["false_easting", 7500000.0],
 PARAMETER["false_northing", 0.0], UNIT["Meters", 1.0]]','kosovo','kosovo','D_GRS_
1980')
\end_layout

\begin_layout Paragraph
Zoom to layer after reprojection
\end_layout

\begin_layout Standard
Check projection issues: try europe.shp: load into a WGS84 view: OK.
 Now copy into an ETRS89 view: (1) zoom zo layer does not work correctly
 any more (2) some country shapes keep disappearing when zooming out and/or
 panning.
\end_layout

\begin_layout Paragraph
Grid-based reprojection fix
\end_layout

\begin_layout Standard
EPSG:25830: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.idee.es/wms/PNOA/PNOA
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Downgrade PROJ4 (and JNI) to version 4.5.0 on all platforms, so that grid-file
 based projections work again.
\end_layout

\begin_layout Standard
Linux: DONE
\end_layout

\begin_layout Standard
Mac OS X:
\end_layout

\begin_layout Standard
Windows: DONE
\end_layout

\begin_layout Paragraph
Add more reprojection grids
\end_layout

\begin_layout Standard
There are grid files for projection French, English and Scottish data to
 ETRS89: http://www.stjohnspoint.co.uk/gis/.
 Email Paul D.
 Kelly about permission to distribute them: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

paul@stjohnspoint.co.uk
\end_layout

\end_inset

-
\end_layout

\begin_layout Paragraph
Trouble saving temporary FP raster to new GeoTIFF
\end_layout

\begin_layout Standard
Windows 7: Created a temp floating point raster using an r.mapcalculator
 expression.
 Then attempted to use 
\begin_inset Quotes eld
\end_inset

Save as
\begin_inset Quotes erd
\end_inset

 to store as a new GeoTIFF.
 Result file had all cells set to 
\begin_inset Quotes eld
\end_inset

0
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection
SEXTANTE
\end_layout

\begin_layout Paragraph
Integer DBF fields get exported as FP
\end_layout

\begin_layout Standard
Try with Okoliste test project: load sherds SHP file, run through Vector
 point layers -> Perturbate points layer.
 The result Shapefile will have all integer type attributes converted to
 type floating point!
\end_layout

\begin_layout Standard
It seems that SEXTANTE always produces format N,18,5 for numeric fields.
\end_layout

\begin_layout Paragraph
Split features by attribute does not work
\end_layout

\begin_layout Standard
Instead, SEXTANTE creates a new feature for every change in attribute value.
\end_layout

\begin_layout Subsubsection
Symbology
\end_layout

\begin_layout Subsubsection
Topology Extension
\end_layout

\begin_layout Standard
"0" does not work for max.
 errors setting (will not find any errors).
\end_layout

\begin_layout Standard
Good default settings: "0" (max errors) and "0.0" (cluster tolerance).
 
\end_layout

\begin_layout Standard
Make sure topology rule illustration show up on Windows.
\end_layout

\begin_layout Subsection
Features
\end_layout

\begin_layout Subsubsection
Other Extensions
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.osor.eu/projects/gvsig-graphlege
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.osor.eu/projects/gvsig-munich
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Advanced Visualization Extension
\end_layout

\begin_layout Standard
Integrate
\end_layout

\begin_layout Subsubsection
NavTable
\end_layout

\begin_layout Standard
Get back in touch with Nacho before final release: nvarela@cartolab.es so
 latest bug fixes can be included!
\end_layout

\begin_layout Subsubsection
Netbook Usability
\end_layout

\begin_layout Standard
Adjusted size of some dialogs so they will fit on netbook screens with low
 vertical resolution: Project Manager, Layer Properties, [DONE]
\end_layout

\begin_layout Subsubsection
Normalization Extension
\end_layout

\begin_layout Standard
Include latest version and check UI translation.
\end_layout

\begin_layout Subsubsection
Raster Data
\end_layout

\begin_layout Standard
Add .BIL to list of supported extensions for opening Raster type layers.
\end_layout

\begin_layout Standard
Add .DEM to list of supported extensions for opening Raster type layers (GTOPO030
).
\end_layout

\begin_layout Standard
Add Raster layer: support for Vertical Mapper extensions (.grc/.tab und .grd/.tab).
\end_layout

\begin_layout Standard
Add whatever extension is needed for ASTER GDEM data.
\end_layout

\begin_layout Standard
Add .hgt (SRTM) extension?
\end_layout

\begin_layout Subsubsection
SEXTANTE
\end_layout

\begin_layout Standard
Version 0.6.0.
\end_layout

\begin_layout Standard
Check translation.
\end_layout

\begin_layout Standard
Make sure that help pages for locale EN show up on a system with locale
 DE etc.
\end_layout

\begin_layout Standard
Update and make sure to include the new "Polygonize" tool (email Anna 21st
 Feb.).
\end_layout

\begin_layout Standard
Calculate Fragstats diversity index.
 Hit "Cancel" during processing: does not cancel.
\end_layout

\begin_layout Standard
Complete English man pages.
\end_layout

\begin_layout Standard
English man pages working as default on other locales?
\end_layout

\begin_layout Standard
Make sure that TIN tools work.
\end_layout

\begin_layout Standard
Diversity index: cuts off lower half of raster (??)
\end_layout

\begin_layout Standard
Testdaten von Irmela: Median_Test.zip: does the Median tool work now (should
 reset all cells to 
\begin_inset Quotes eld
\end_inset

1.0
\begin_inset Quotes erd
\end_inset

)?
\end_layout

\begin_layout Standard
Include: 
\end_layout

\begin_layout Itemize
Kvamme's Ridge-Drain
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
C LAST UPDATE: 4/21/92
\end_layout

\begin_layout Plain Layout
C
\end_layout

\begin_layout Plain Layout
REAL*4 FUNCTION rdindex ( e4,e3,e2,e5,e0,e1,e6,e7,e8 )
\end_layout

\begin_layout Plain Layout
C ************************************************************
\end_layout

\begin_layout Plain Layout
C Main 3x3 window function for ridge-drainage index
\end_layout

\begin_layout Plain Layout
C Matrix arranged as follows:
\end_layout

\begin_layout Plain Layout
C e4, e3, e2
\end_layout

\begin_layout Plain Layout
C e5, e0, e1
\end_layout

\begin_layout Plain Layout
C e6, e7, e8
\end_layout

\begin_layout Plain Layout
C ************************************************************
\end_layout

\begin_layout Plain Layout
REAL*4 e0,e1,e2,e3,e4,e5,e6,e7,e8,angle
\end_layout

\begin_layout Plain Layout
REAL*4 e(9)
\end_layout

\begin_layout Plain Layout
INTEGER*2 i,j,one
\end_layout

\begin_layout Plain Layout
LOGICAL*2 less(9)
\end_layout

\begin_layout Plain Layout
PARAMETER ( one=1 )
\end_layout

\begin_layout Plain Layout
C
\end_layout

\begin_layout Plain Layout
e(1) = e1
\end_layout

\begin_layout Plain Layout
e(2) = e2
\end_layout

\begin_layout Plain Layout
e(3) = e3
\end_layout

\begin_layout Plain Layout
e(4) = e4
\end_layout

\begin_layout Plain Layout
e(5) = e5
\end_layout

\begin_layout Plain Layout
e(6) = e6
\end_layout

\begin_layout Plain Layout
e(7) = e7
\end_layout

\begin_layout Plain Layout
e(8) = e8
\end_layout

\begin_layout Plain Layout
e(9) = e1
\end_layout

\begin_layout Plain Layout
rdindex = 0.0
\end_layout

\begin_layout Plain Layout
DO i = one, 9
\end_layout

\begin_layout Plain Layout
less(i) = e(i) .LE.
 e0
\end_layout

\begin_layout Plain Layout
ENDDO
\end_layout

\begin_layout Plain Layout
DO i = one, 8
\end_layout

\begin_layout Plain Layout
j = i + one
\end_layout

\begin_layout Plain Layout
IF ( less(i) .and.
 less(j) ) THEN
\end_layout

\begin_layout Plain Layout
rdindex = rdindex + 45.0
\end_layout

\begin_layout Plain Layout
ELSE
\end_layout

\begin_layout Plain Layout
IF ( less(i) .OR.
 less(j) ) THEN
\end_layout

\begin_layout Plain Layout
rdindex = rdindex + angle( e0,e(i),e(j),i )
\end_layout

\begin_layout Plain Layout
ENDIF
\end_layout

\begin_layout Plain Layout
ENDIF
\end_layout

\begin_layout Plain Layout
ENDDO
\end_layout

\begin_layout Plain Layout
END
\end_layout

\begin_layout Plain Layout
C
\end_layout

\begin_layout Plain Layout
REAL*4 FUNCTION angle ( e0,e1,e2,i )
\end_layout

\begin_layout Plain Layout
C *** Function used by RDINDEX to compute angles **************
\end_layout

\begin_layout Plain Layout
REAL*4 e0,e1,e2,radian,base
\end_layout

\begin_layout Plain Layout
INTEGER*2 i
\end_layout

\begin_layout Plain Layout
PARAMETER ( radian = 57.29578 )
\end_layout

\begin_layout Plain Layout
C
\end_layout

\begin_layout Plain Layout
IF ( MOD(i,2) .EQ.
 0 ) THEN
\end_layout

\begin_layout Plain Layout
base = e2
\end_layout

\begin_layout Plain Layout
ELSE
\end_layout

\begin_layout Plain Layout
base = e1
\end_layout

\begin_layout Plain Layout
ENDIF
\end_layout

\begin_layout Plain Layout
angle = ATAN( (e0-base) / ABS( e1-e2 ) ) * radian
\end_layout

\begin_layout Plain Layout
IF ( angle .LT.
 0.0 ) angle = angle + 45.0
\end_layout

\begin_layout Plain Layout
END
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Kvamme's Rim
\end_layout

\begin_layout Itemize
Approximative viewsheds
\end_layout

\begin_layout Itemize
Close polylines tool
\end_layout

\begin_layout Subsection
Sample Data
\end_layout

\begin_layout Standard
NC dataset: col 
\begin_inset Quotes eld
\end_inset

id
\begin_inset Quotes erd
\end_inset

 in geology.shp should be integer, not double (also in geology_labels.shp).
\end_layout

\begin_layout Standard
Add Okoliste dataset.
\end_layout

\begin_layout Standard
Add Antikythera data.
\end_layout

\begin_layout Standard
Add Earth dataset (SRTM + water bodies, Landsat, GeoNet names): Natural
 Earth PD.
\end_layout

\begin_layout Subsection
Deutsche Übersetzung
\end_layout

\begin_layout Standard
Verbessern!
\end_layout

\begin_layout LyX-Code
Dear list,
\end_layout

\begin_layout LyX-Code
within the digitizing dialogue (polyline), there is currently an error.
 
\end_layout

\begin_layout LyX-Code
In the context menu
\end_layout

\begin_layout LyX-Code
"terminate" and "cancel" are both translated with "Abbrechen".
 This is 
\end_layout

\begin_layout LyX-Code
not correct and confuses the user (screenshot attached)
\end_layout

\begin_layout LyX-Code
It would be great, if this could be corrected.
\end_layout

\begin_layout LyX-Code
Best,
\end_layout

\begin_layout LyX-Code
Wolfgang
\end_layout

\begin_layout Subsection
Translation
\end_layout

\begin_layout Standard
Update .properties files for all languages and extensions (new strings)!
\end_layout

\begin_layout Standard
SPELL CHECK the translation text files!!!
\end_layout

\begin_layout Standard
Export to Shapefile: "PluginServices.Procesando", "cancelar" [DONE: TEST]
\end_layout

\begin_layout Standard
Spanish message when updating and old, version 1.1.2 project file.
 [DONE]
\end_layout

\begin_layout Standard
Query results tool for raster layers: View_Point, World_Point, Pixel_Point,
 Band_Value,\SpecialChar \ldots{}

\end_layout

\begin_layout Standard
Reprojection dialog: Add Layer -> change projection settings -> switch transform
ation type to EPSG -> Top frame label is in Spanish\SpecialChar \ldots{}

\end_layout

\begin_layout Standard
Interval type legend: create some new classes, double-click the 
\begin_inset Quotes eld
\end_inset

Value
\begin_inset Quotes erd
\end_inset

 column to set the interval width.
 Dialog has: 
\begin_inset Quotes eld
\end_inset

Valor minimo
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Valor maximo
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Reprojection using Geoprocessing Tools: has a status message window that
 says 
\begin_inset Quotes eld
\end_inset

Reproyectando [\SpecialChar \ldots{}
]
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Load Landsat sample TIFF into a a WGS 84 location -> dialog for reprojection
 appears.
 Accept reprojection.
 Window appears: frame label 
\begin_inset Quotes eld
\end_inset

Estadisticas
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Start editing a r/o vector layer (e.g.
 WFS layer): stop editing -> terrible English message.
 Plus, the 
\begin_inset Quotes eld
\end_inset

Close
\begin_inset Quotes erd
\end_inset

 button should really be labelled 
\begin_inset Quotes eld
\end_inset

Cancel
\begin_inset Quotes erd
\end_inset

!
\end_layout

\begin_layout Subsubsection
SEXTANTE
\end_layout

\begin_layout Standard
Rename tools:
\end_layout

\begin_layout Standard
Density -> Simple density
\end_layout

\begin_layout Standard
Density (kernel) -> Kernel density
\end_layout

\begin_layout Standard
Conflict in JARs:
\end_layout

\begin_layout LyX-Code
java.io.IOException: Two classes with the same name: it.falciano.sextante.vectorAddFi
eld.VectorAddFieldAlgorithm In gvSIG/extensiones/es.unex.sextante/./sextante_tables-
0.6-SNAPSHOT.jar and in gvSIG/extensiones/es.unex.sextante/./sextante_vectorTools-0.6-
SNAPSHOT.jar Jar: gvSIG/extensiones/es.unex.sextante/./sextante_tables-0.6-SNAPSHOT.ja
r: java.util.zip.ZipFile@1f78b68
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Subsection
Documentation
\end_layout

\begin_layout Standard
Installation of GRASS GIS.
\end_layout

\begin_layout Standard
64 bit Java machines and gvSIG OADE 2010: JNI libraries are 32 bit.
\end_layout

\begin_layout Subsection
Projection Support
\end_layout

\begin_layout Standard
Definitions for new SRS can be added to 
\family typewriter
usr.script
\family default
 in org.gvsig.crs.
 They will be integrated automatically into the projection database on startup.
 Such definitions will then be available as 
\begin_inset Quotes eld
\end_inset

User SRS
\begin_inset Quotes erd
\end_inset

 in gvSIG.
 Note that because the extJRS code stores user definitions in a central
 file for all users that means that (a) users need write access to extensiones/o
rg.gvsig.crs to create new SRS and (b) all definitions will be shared by all
 users on the same system and (c) the first users to get access to u
\family typewriter
sr.script
\family default
 (i.e.
 currently the first one to start up gvSIG!) will lock the User SRS database
 (a lock file 
\family typewriter
usr.lck
\family default
 is written and not deleted until gvSIG is exited by the same user!).
\end_layout

\begin_layout Standard
Updating the EPSG codes database for a gvSIG installation is substantially
 more difficult, as that database is much more complex.
 It contains aliases, updates, element names and transformations, as well
 as the actual SRS definitions.
\end_layout

\begin_layout Standard
The entire, up-to-date database can be downloaded here: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.epsg.org/Geodetic.html
\end_layout

\end_inset

.
 The download archive contains SQL definitions for a specific DBMS (e.g.
 PostgreSQL) and documentation.
 The SQL code for schema and data definition is in separate files.
\end_layout

\begin_layout Standard
E.g., the new EPSG definition for EPSG:3857 (Google Pseudo-Mercator) has these
 entries (PostgreSQL code):
\end_layout

\begin_layout Standard
An alias (wich is the EPSG:Nnnnn code):
\end_layout

\begin_layout LyX-Code
INSERT INTO epsg_alias VALUES ( 5966, 
\end_layout

\begin_layout LyX-Code
'Coordinate Reference System', 
\end_layout

\begin_layout LyX-Code
3857, 
\end_layout

\begin_layout LyX-Code
7301, 
\end_layout

\begin_layout LyX-Code
'WGS 84 / Popular Visualisation Pseudo-Mercator', 
\end_layout

\begin_layout LyX-Code
'' ); 
\end_layout

\begin_layout Standard
Some change history notes:
\end_layout

\begin_layout LyX-Code
INSERT INTO epsg_change VALUES ( 2008.114, 
\end_layout

\begin_layout LyX-Code
'2008-12-11', 
\end_layout

\begin_layout LyX-Code
'2009-02-10', 
\end_layout

\begin_layout LyX-Code
'OGP', 
\end_layout

\begin_layout LyX-Code
'Revisit spherical mercator used for some web mapping applications', 
\end_layout

\begin_layout LyX-Code
'Ellipsoid; Datum; Coordinate Operation Method; Coordinate Operation; Coordinate
 Reference System', 
\end_layout

\begin_layout LyX-Code
'7059; 6055; 9841; 15973 19847; 4055 3785', 
\end_layout

\begin_layout LyX-Code
'See change request 2008.016.', 
\end_layout

\begin_layout LyX-Code
'Deprecated ellipsoid 7059, datum 6055, method 9841, projection 19847, CRSs
 4055 and 3785, tfm 15973.
 Added methods 1024 and 1026, proj 3856 and projCRS 3857.' ); 
\end_layout

\begin_layout Standard
The actual definition:
\end_layout

\begin_layout LyX-Code
INSERT INTO epsg_coordinatereferencesystem VALUES ( 3857, 
\end_layout

\begin_layout LyX-Code
'WGS 84 / Pseudo-Mercator', 
\end_layout

\begin_layout LyX-Code
3544, 
\end_layout

\begin_layout LyX-Code
'projected', 
\end_layout

\begin_layout LyX-Code
4499, 
\end_layout

\begin_layout LyX-Code
Null, 
\end_layout

\begin_layout LyX-Code
4326, 
\end_layout

\begin_layout LyX-Code
3856, 
\end_layout

\begin_layout LyX-Code
Null, 
\end_layout

\begin_layout LyX-Code
Null, 
\end_layout

\begin_layout LyX-Code
'Certain Web mapping and visualisation applications.', 
\end_layout

\begin_layout LyX-Code
'Uses spherical development of ellipsoidal coordinates.
 Relative to an ellipsoidal development errors of up to 800 metres in position
 and 0.7 percent in scale may arise.
 It is not a recognised geodetic system: see WGS 84 / World Mercator (CRS
 code 3395).', 
\end_layout

\begin_layout LyX-Code
'Microsoft.', 
\end_layout

\begin_layout LyX-Code
'OGP', 
\end_layout

\begin_layout LyX-Code
'2009-02-09', 
\end_layout

\begin_layout LyX-Code
'2008.114', 
\end_layout

\begin_layout LyX-Code
1, 
\end_layout

\begin_layout LyX-Code
0 );
\end_layout

\begin_layout Standard
A deprecation note for the older EPSG:3785:
\end_layout

\begin_layout LyX-Code
INSERT INTO epsg_deprecation VALUES ( 1067, 
\end_layout

\begin_layout LyX-Code
'2009-02-10', 
\end_layout

\begin_layout LyX-Code
2008.114, 
\end_layout

\begin_layout LyX-Code
'Coordinate Reference System', 
\end_layout

\begin_layout LyX-Code
3785, 
\end_layout

\begin_layout LyX-Code
3857, 
\end_layout

\begin_layout LyX-Code
'OGP revised its approach to description of Popular Visualisation CRS.' );
 
\end_layout

\begin_layout Standard
Note that all identifiers are capitalized! HSQLDB implicitely converts all
 identifier characters to upper case, but here it is done explicitely.
\end_layout

\begin_layout Subsubsection
EPSG Database Updates
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
CURRENTLY NOT WORKING: TOO MUCH HAS CHANGED IN THE EPSG DEFINITIONS IN THE
 MEANTIME!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
GvSIG does no longer use it's own code to create the EPSG codes databases.
 Instead, it ships with a stripped (and now quite outdated) copy of the
 one from Geotools.org (located in extensiones/com.iver.cit.gvsig/lib/geotools-epsg-
hsql-2.1.1_gvsig.jar).
 The EPSG database is re-created on each startup from the SQL code in org/geotoo
ls/referencing/factory/epsg/EPSG.sql (which accounts for a good part of the
 startup-time).
 That file can be modified and replaced in the .jar to update the EPSG definition
s.
 Unfortunately, more recent versions of Geotools (>2.5) no longer include
 EPSG.sql, but instead the binary HSQL database.
 So EPSG.sql needs to be created manually from the epsg.org database scripts.
\end_layout

\begin_layout Standard
Exactly how to do this is described in the file UpdateEPSGDatabase.txt, which
 comes with the Geotools project sources.
 Changes can be based on the PostgreSQL code supplied by the EPSG, but the
 UNIQUE constraints need to be placed at the end of the table definitions
 (rather than as part of the field definitions).
 There is an Ant script PrepareForHSQL.xml, which can be used to perform
 the remaining modifications automatically and understand the details.
\end_layout

\begin_layout Standard
Make sure to adjust the EPSG file names (versions!) in the Ant script, then
 run it:
\end_layout

\begin_layout LyX-Code
ant -f PrepareForHSQL.xml
\end_layout

\begin_layout Standard
After it finishes, modify the output EPSG_Tables.sql so that the UNIQE keywords
 are at the end of the table definitions, e.g.:
\end_layout

\begin_layout LyX-Code
CREATE CACHED TABLE epsg_change (  
\end_layout

\begin_layout LyX-Code
change_id                                          DOUBLE PRECISION NOT
 NULL,  
\end_layout

\begin_layout LyX-Code
report_date                                        DATE NOT NULL,  
\end_layout

\begin_layout LyX-Code
date_closed                                        DATE,  
\end_layout

\begin_layout LyX-Code
reporter                                           VARCHAR(254) NOT NULL,
  
\end_layout

\begin_layout LyX-Code
request                                            VARCHAR(254) NOT NULL,
  
\end_layout

\begin_layout LyX-Code
tables_affected                                    VARCHAR(254),  
\end_layout

\begin_layout LyX-Code
codes_affected                                     VARCHAR(254),  
\end_layout

\begin_layout LyX-Code
change_comment                                     VARCHAR(254),  
\end_layout

\begin_layout LyX-Code
action                                             VARCHAR, 
\end_layout

\begin_layout LyX-Code
UNIQUE (change_id) );
\end_layout

\begin_layout Standard
Then merge the files into one SQL script in this order:
\end_layout

\begin_layout LyX-Code
cat EPSG_Tables.sql EPSG_Data.sql EPSG_FKeys.sql > input.sql
\end_layout

\begin_layout Standard
The resulting file still needs heavy modifications.
 They can be done automatically by running 
\begin_inset Quotes eld
\end_inset

input.sql
\begin_inset Quotes erd
\end_inset

 through 
\begin_inset Quotes eld
\end_inset

makeEPSG.java
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout LyX-Code
java makeEPSG input.sql
\end_layout

\begin_layout Standard
This will produce a new EPSG.sql file which can be injected into 
\begin_inset Quotes eld
\end_inset

geotools-epsg-hsql-2.1.1_gvsig.jar
\begin_inset Quotes erd
\end_inset

 in order to update the EPSG database.
\end_layout

\begin_layout Standard
HOWEVER, this will not work, as there have been too many fundamental changes
 in the EPSG definitions.
 The problem is, that the table definitions have changed, too.
 E.g.
 for the table EPSG_DATUM:
\end_layout

\begin_layout LyX-Code
CREATE CACHED TABLE EPSG_DATUM(DATUM_CODE INTEGER NOT NULL,DATUM_NAME VARCHAR(80
) NOT NULL,DATUM_TYPE VARCHAR(24) NOT NULL,ORIGIN_DESCRIPTION VARCHAR(254),REALI
ZATION_EPOCH VARCHAR(4),ELLIPSOID_CODE INTEGER,PRIME_MERIDIAN_CODE INTEGER,AREA_
OF_USE_CODE INTEGER NOT NULL,DATUM_SCOPE VARCHAR(254) NOT NULL,REMARKS VARCHAR(2
54),INFORMATION_SOURCE VARCHAR(254),DATA_SOURCE VARCHAR(40) NOT NULL,REVISION_DA
TE DATE NOT NULL,CHANGE_ID VARCHAR(255),DEPRECATED SMALLINT NOT NULL,CONSTRAINT
 PK_DATUM PRIMARY KEY(DATUM_CODE))
\end_layout

\begin_layout Standard
\SpecialChar \ldots{}
 the field REALIZATION_EPOCH is now VARCHAR type, but gvSIG still expects
 it to be type INTEGER.
 In gvSIG, this leads to:
\end_layout

\begin_layout LyX-Code
org.opengis.referencing.NoSuchAuthorityCodeException: Unabled to locate code
\end_layout

\begin_layout LyX-Code
	at org.geotools.referencing.CRS.decode(CRS.java:233)
\end_layout

\begin_layout LyX-Code
	at org.gvsig.crs.repository.EpsgRepositoryGT.getCrs(EpsgRepositoryGT.java:62)
\end_layout

\begin_layout LyX-Code
	at org.gvsig.crs.CrsFactory.getCRS(CrsFactory.java:93)
\end_layout

\begin_layout LyX-Code
\SpecialChar \ldots{}

\end_layout

\begin_layout Standard
\SpecialChar \ldots{}
 but is caused a lot further down by Getools:
\end_layout

\begin_layout LyX-Code
Caused by: org.opengis.referencing.FactoryException: Database failure will
 constructing a Datumfor code "6314".
\end_layout

\begin_layout LyX-Code
	at org.geotools.referencing.factory.epsg.FactoryUsingSQL.databaseFailure(FactoryUsing
SQL.java:1749)
\end_layout

\begin_layout LyX-Code
	at org.geotools.referencing.factory.epsg.FactoryUsingSQL.createDatum(FactoryUsingSQL.j
ava:1185)
\end_layout

\begin_layout Standard
\SpecialChar \ldots{}
 but gvSIG does not even come with the Geotools code, but instead uses ancient
 binaries!
\end_layout

\begin_layout Standard
There really is not much that can be done about it, without updating all
 the CRS handling code in gvSIG to uses the latest Geotools API.
\end_layout

\begin_layout Standard
The Geotoolkit project (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.geotoolkit.org
\end_layout

\end_inset

) supplies an up-to-date version of the EPSG database SQL definitions that
 can be run though a number of databases.
 It also has a script Extensions.sql, which can be used as a template for
 extensions to the EPSG database.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
STATUS QUO: EPSG.sql from Geotools 2.5.8 = EPSG DB version 6.12.
 The one shipped with gvSIG is version 6.14!!! (look for last DB entry under
 
\begin_inset Quotes eld
\end_inset

INSERT INTO EPSG_CHANGE
\begin_inset Quotes erd
\end_inset

).
 So we'll not change the DB.
 Instead, just carefully extent the present one.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Kosovo SRS
\end_layout

\begin_layout Paragraph
EPSG Database entries
\end_layout

\begin_layout Standard
Based on ETRS 1989 Datum and CRS.
 As ID, I chose the same as ESRI.
 There is not currently an official EPSG code for Kosovo.
 Also known as 
\begin_inset Quotes eld
\end_inset

Kosovaref
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Entries have to be added to 
\begin_inset Quotes eld
\end_inset

EPSG.sql
\begin_inset Quotes erd
\end_inset

, located in extensiones/com.iver.cit.gvsig/lib/geotools-epsg-hsql-2.1.1_gvsig.jar.
\end_layout

\begin_layout Standard
Be careful to terminate an entry with either 
\begin_inset Quotes eld
\end_inset

),
\begin_inset Quotes erd
\end_inset

 or just 
\begin_inset Quotes eld
\end_inset

)
\begin_inset Quotes erd
\end_inset

, depending on whether it is the last entry for a table!!!
\end_layout

\begin_layout Standard
I used EPSG:2198 (ETRS89 / Kp2000 Bornholm) as a template for defining this.
\end_layout

\begin_layout LyX-Code
INSERT INTO EPSG_ALIAS VALUES
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout LyX-Code
(3972,'Coordinate Reference System',
\series bold
102157
\series default
,7301,'KOSOVAREF (INOFFICIAL)','')
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout LyX-Code
INSERT INTO EPSG_AREA VALUES
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout LyX-Code
(
\series bold
3537
\series default
,'Kosovo','Kosovo',41.84,43.26,20.03,21.77,'','','',NULL,'','DAI','DAI','2010-08-24'
,'',0)
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout LyX-Code
INSERT INTO EPSG_CHANGE VALUES
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout LyX-Code
(2010.001,'2010-08-24','2010-08-24','DAI','Inofficial definition for Kosovo.','Coo
rdinate reference system','102157','Not an official definition.','Created
 new definition.')
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout LyX-Code
INSERT INTO EPSG_COORDINATEREFERENCESYSTEM VALUES
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout LyX-Code
(
\series bold
102157
\series default
,'ETRS89 / Kosovo (INOFFICIAL)',
\series bold
3537
\series default
,'projected',4400,NULL,4258,
\series bold
20000
\series default
,NULL,NULL,'Large and scale topographic mapping, cadastral and engineering
 survey.','Replaces FYR SRS.','Kohli 2002','DAI','2010-08-24','2010.001',1,0),
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout LyX-Code
INSERT INTO EPSG_COORDOPERATION VALUES
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout LyX-Code
(
\series bold
20000
\series default
,'Kosovaref','conversion',NULL,NULL,'',NULL,
\series bold
3537
\series default
,'Topographic mapping at scales of 1:5,000 and larger, cadastral and engineering
 survey.',0.0,9807,NULL,NULL,'','Kohli 2002','DAI','2010-08-24','',1,0)
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout LyX-Code
INSERT INTO EPSG_COORDOPERATIONPARAMVALUE VALUES
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout LyX-Code
(
\series bold
20000
\series default
,9807,8801,0.0,'',9102),
\end_layout

\begin_layout LyX-Code
(
\series bold
20000
\series default
,9807,8802,21.0,'',9102),
\end_layout

\begin_layout LyX-Code
(
\series bold
20000
\series default
,9807,8805,0.999900000000000010,'',9201),
\end_layout

\begin_layout LyX-Code
(
\series bold
20000
\series default
,9807,8806,7500000.0,'',9001),
\end_layout

\begin_layout LyX-Code
(
\series bold
20000
\series default
,9807,8807,0.0,'',9001)
\end_layout

\begin_layout LyX-Code
[\SpecialChar \ldots{}
]
\end_layout

\begin_layout Paragraph
GDAL-EPSG database entries
\end_layout

\begin_layout Standard
To allow raster reprojection, the same defintion has to be added to GDAL's
 own copy of the EPSG database.
 It resides in several CSV files stored in 
\begin_inset Quotes eld
\end_inset

libs/gdal_data
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout Standard
In file 
\begin_inset Quotes eld
\end_inset

pcs.csv
\begin_inset Quotes erd
\end_inset

 Add a new line to the end:
\end_layout

\begin_layout LyX-Code
102157,"ETRS89 / Kosovo (INOFFICIAL)",9001,4258,20000,9807,1,0,4400,8801,0,9102,
8802,21,9102,8805,0.999900000000000010,9201,8806,7500000,9001,8807,0,9001,,,,,,
\end_layout

\begin_layout Standard
In file 
\begin_inset Quotes eld
\end_inset

projop_wparm.csv
\begin_inset Quotes erd
\end_inset

: Add a new line to the end:
\end_layout

\begin_layout LyX-Code
20000,ETRS89 / Kosovo (INOFFICIAL),9807,8801,0,9102,8802,21,9102,8805,0.999900000
000000010,9201,8806,7500000,9001,8807,0,9001,,,,,,
\end_layout

\begin_layout Subsubsection
Germany - 1
\end_layout

\begin_layout Standard
Bei den EPSG-Daten ist mir, mit Bezug auf die DHDN-Systeme aufgefallen,
 dass ihr einen alten Datensatz verwendet.
 Code 31461 bis 31465 sind veraltet -wenn auch nur nomenclatorisch - und
 werden bei ESRI seit 2007 und im jüngsten release von http://www.epsg.org/
 nicht mehr gelistet.
\end_layout

\begin_layout Standard
Zu den Codes: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://support.esri.de/files/support/KoordinatensystemeInDeutschland.pdf
\end_layout

\end_inset

 Hier Seite 6 ff.
 werden die sprachlichen Spitzfindigkeiten erläutert.
\end_layout

\begin_layout Standard
Ich verwende die MS Access-DB: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.epsg.org/databases/Discv7_4.html
\end_layout

\end_inset

 --> epsg-47_4_1.zip, die von Euch verwendeten Codes sind hier entsprechend
 obigem Dokument nicht mehr gelistet.
 
\end_layout

\begin_layout Subsubsection
Germany - 2
\end_layout

\begin_layout Standard
Dear list, 
\end_layout

\begin_layout Standard
here is another working grid-based reprojektion for Germany.
\end_layout

\begin_layout Standard
Reprojecting from GK to ETRS89/UTM using grid BETA2007
\end_layout

\begin_layout Standard
In the next years coordinates from different old SRS in Germany will change
 to the new projection ETRS89/UTM 
\end_layout

\begin_layout Standard
with EPSG:25832 (Westgermany) and 25833 (Eastgermany).
\end_layout

\begin_layout Standard
Most old SRS in former Westgermany are based on the Gauss-Krueger-Projektion
 (GK, EPSG:31466, 31467 and 31468).
\end_layout

\begin_layout Standard
The transition from GK to UTM can be done with the integrated "transformation
 on the fly" in gvSIG for errors lower than 5 meters.
 If you use the grid "BETA2007.gsb", the error is lower than 1 meter.
\end_layout

\begin_layout Standard
Here you can get the grid and coordinates for a tests :
\end_layout

\begin_layout Standard
www.crs-geo.eu/BeTA2007
\end_layout

\begin_layout Standard
files BETA2007.gsb (85 kByte)
\end_layout

\begin_layout Standard
BETA2007testdaten.csv (12 kByte)
\end_layout

\begin_layout Standard
On this website you find lots of additional informations.
\end_layout

\begin_layout Standard
For a test make a dfb-file from the csv-file by selecting all records with
 Quell-Bezugssystem (source) = DE_DHDN_3GK3 and Ziel-Bezugssytem (target)
 = ETRS89_UTM32.
\end_layout

\begin_layout Standard
From this dbf-table create the shape (with testpoints) GK3_31467.shp using
 Quell-X and Quell-Y for X- and Y-coodinates.
 
\end_layout

\begin_layout Standard
How to integrate the *.gsb - file in gvSIG 1.9 ?
\end_layout

\begin_layout Standard
Make a view with SRS-property EPSG:25832 (ETRS89/UTM32) and add the testpoint-sh
ape with the SRS-Property EPSG:31467, using grid-transformation (with german-pro
gram-surface/skin : NTv2 Format Raster- Datei).
 
\end_layout

\begin_layout Standard
In the next window click the button Import and select the previous downloaded
 grid BETA2007.gsb.
\end_layout

\begin_layout Standard
Then Export the reprojected shape under the name UTM32_25832.shp and add
 it to the view.
 Now you can add the fields X and Y and calculate x() and y().
 
\end_layout

\begin_layout Standard
Then calculate the difference between Ziel-X and X / Ziel-Y and y.
\end_layout

\begin_layout Standard
The Errors are lower 0.01 meters ! The testpoints are no grid-points !
\end_layout

\begin_layout Standard
Observations
\end_layout

\begin_layout Standard
1.
 The reprojektion with the grid does not work in the reverse order from
 UTM to GK.
\end_layout

\begin_layout Standard
2.
 Reprojection from GK to UTM with gvSIG using the same testpoint-shape and
 the integrated EPSG-transformations 1780 or 15948 result with errors between
 100 and 200 meters ! Why ?
\end_layout

\begin_layout Standard
Greetings
\end_layout

\begin_layout Standard
Heinz Mundhenk
\end_layout

\begin_layout Standard
hmundhenk@gmx.de
\end_layout

\begin_layout Subsubsection
Google Earth
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
NOT WORKING
\end_layout

\begin_layout Plain Layout
GvSIG cannot handle this type of projection.
 It outputs a buggy error message (
\begin_inset Quotes eld
\end_inset

SRS not supported Colour scheme
\begin_inset Quotes erd
\end_inset

)!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Google Earth' projection system is not officially recognized.
 However, since GE has become so popular, there is now an EPSG code (3857)
 for it in the current EPSG database.
 Since GE uses a very rough ellipsoidal approximation, the EPSG database
 entry for EPSG:3857 states: 
\begin_inset Quotes eld
\end_inset

Relative to an ellipsoidal development errors of up to 800 metres in position
 and 0.7 percent in scale may arise.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Another, unofficial alias for the same code, which is floating around on
 the web (see here: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://crschmidt.net/blog/archives/243/google-projection-900913/
\end_layout

\end_inset

) is EPSG 900913.
 It's supposed to be funny, since the digits look a bit like 
\begin_inset Quotes eld
\end_inset

google
\begin_inset Quotes erd
\end_inset

.
 What's not so funny is that this now overlaps with the official EPSG:3857
 which serves the same purpose.
 So any implementation of 
\begin_inset Quotes eld
\end_inset

EPSG:900913
\begin_inset Quotes erd
\end_inset

 is now up to the individual GIS app, as EPSG will probably never introduce
 this code into their official database.
\end_layout

\begin_layout Standard
WKT string can be found here: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://spatialreference.org/ref/sr-org/6627/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Obviously, this could be entered into gvSIG as user SRS (although gvSIG
 for some reason does not like the WKT above), but then it will still not
 be available in gvSIG by default if e.g.
 a WMS server has a layer in EPSG:900913 and it needs to be reprojected
 into UTM.
\end_layout

\begin_layout Standard
A better solution would be to have this in gvSIG's copy of the EPSG database.
\end_layout

\begin_layout Subsubsection
Italy
\end_layout

\begin_layout Standard
Hi all.
 Standard EPSG code for Italian projections (3003 and 3004) do not include
 datum; as a result, reprojection is always wrong by about 100 m.
 Can we add 4 more projection definition to our SRS database? It should
 only be added the +towgs84 parameter so that we'll have:
\end_layout

\begin_layout Standard
3003 corrected, mainland: same as 3003, with +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,
0.714,-11.68
\end_layout

\begin_layout Standard
3004 corrected, mainland: same as 3004, with +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,
0.714,-11.68
\end_layout

\begin_layout Standard
3003 corrected, Sardinia: same as 3003, with +towgs84=-168.6,-34.0,38.6,-0.374,-0.679
,-1.379,-9.48
\end_layout

\begin_layout Standard
3004 corrected, Sicily: same as 3004, with +towgs84=-50.2,-50.4,84.8,-0.690,-2.012,0.4
59,-28.08
\end_layout

\begin_layout Standard
In GRASS this has been solved by a similar approach: http://freegis.org/cgi-bin/v
iewcvs.cgi/*checkout*/grass/src/libes/gis/datumtransform.table?rev=HEAD&content-ty
pe=text/plain I think this can be done now, as it does not impact anything
 else, and it would make life a lot easier for Italian users (remember,
 the second largest QGIS user community!).
 Details in http://www.crs-geo.eu/ Thanks a lot.
\end_layout

\begin_layout Standard
-- http://www.faunalia.it/pc
\end_layout

\begin_layout Subsubsection
Local
\end_layout

\begin_layout Standard
Provide a local m grid, no projection, as part of the EPSG database.
 Maybe use EPSG:0 ?
\end_layout

\begin_layout Subsubsection
Switzerland
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
I have a problem with the Swiss srs ESRI (or EPSG) Code 2056 CH1903+_LV95.
\end_layout

\begin_layout Plain Layout
If I try to set this projection in any gvSIG 1.9 based version (including
 OA 2010) I get the following message "java.lang.Exception: In proj4 Projection
 Oblique Mercator not admit azimut close to 90" (on another machine "java.lang.
 Exception: in PROJ.4 projection Oblique Mercator cannot set azimuth close
 to 90").
\end_layout

\begin_layout Plain Layout
---
\end_layout

\begin_layout Plain Layout
I think you'll have to create a custom SRS, as in this message:
\end_layout

\begin_layout Plain Layout
http://listserv.gva.es/pipermail/gvsig_internacional/2009-December/004311.html
\end_layout

\begin_layout Plain Layout
The trick consists in replacing 90 with 89.9999.
 I think you can do the same, but using a different WKT string.
 The one you need is this:
\end_layout

\begin_layout Plain Layout
http://spatialreference.org/ref/epsg/2056/ogcwkt/
\end_layout

\begin_layout Plain Layout
Afterwards, if you ever need to perform a reprojection involving that custom
 SRS, you'll need the 7 parameters TOWGS84 also found in that WKT string.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Additional Gridfiles
\end_layout

\begin_layout Standard
Available here: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.killetsoft.de/p_trdn_e.htm
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Miscellaneous
\end_layout

\begin_layout Standard
Change default projection to NOT be EPSG 23030.
\end_layout

\begin_layout Standard
Make sure that all license files are in place: ECW, MrSID, ...
 !
\end_layout

\begin_layout Standard
Find and delete unneeded files: *.~, *.bak, etc.
\end_layout

\begin_layout Standard
Branding: edit about.html for Help->About page --> add OAD to "Others" page.
\end_layout

\begin_layout Standard
Update README files etc.
 for distribution.
\end_layout

\begin_layout Standard
README file: eliminate "ASCII art" characters: they get corrupted in the
 InstallBuilder text viewer widget
\end_layout

\begin_layout Standard
Build needs its own build number: change build number to 1253-oa or something
 like that!
\end_layout

\begin_layout Standard
Provide some common SRS in the "Recent" list by default.
\end_layout

\begin_layout Standard
Add a generic, non-world projection definition for local surveying systems.
\end_layout

\begin_layout Standard
Make sure to include all of the latest 1.9 SVN patches.
\end_layout

\begin_layout Standard
Latest NavTable, if available.
\end_layout

\begin_layout Standard
DVD distribution (for $$$): include printed manual, complete GRASS install
 and global dataset from here: http://www.naturalearthdata.com/, plus support
 coupon, plus screen-recorded tutoral videos.
\end_layout

\begin_layout Standard
GvSIG read-only client: produce a stripped-down version without CAD editor,
 table management, etc.
\end_layout

\begin_layout Standard
Give Gary a chance to contribute templates/north arrows, etc.
\end_layout

\begin_layout Section
Mac OS X Version
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Associating .gvp files and launching them from the desktop does not work:
 it's unclear how to pass the filename from preJava to JavaApplicationStub.
 Need to look into that when/if there's time.
 Should work OK though when using an alternative Java version.
 Maybe switch to a complete manual call of the JVM, even for the built-in
 one?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The GPS Extension is not available on Mac OS X, due to missing GPS support
 libraries for that platform.
\end_layout

\begin_layout Standard
Apple's version of Java tries to emulate the look and feel of Mac OS X as
 closely as possible.
 However, the widgets it uses are very large and the file selectors differ
 a lot from those used on other operating systemes.
 All of this leads to problems such as dialogs being mangled or entirely
 unusable and certain file operations being erronous or not avilable at
 all.
 We strongly recommend you switch to the default cross-platform look and
 feel in order to avoid any problems with the user interface: Open the 
\begin_inset Quotes eld
\end_inset

Preferences
\begin_inset Quotes erd
\end_inset

 dialog, go 
\begin_inset Quotes eld
\end_inset

General->Appearance
\begin_inset Quotes erd
\end_inset

, and in the drop-down box select 
\begin_inset Quotes eld
\end_inset

Plastic XP
\begin_inset Quotes erd
\end_inset

.
 Then restart gvSIG.
\end_layout

\begin_layout Standard
If using the (default and recommended) 
\begin_inset Quotes eld
\end_inset

Plastic XP
\begin_inset Quotes erd
\end_inset

 look and feel, the keyboard shortcuts for 
\begin_inset Quotes eld
\end_inset

Copy
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Cut
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Paste
\begin_inset Quotes erd
\end_inset

 will no longer be 
\begin_inset Quotes eld
\end_inset

Apple+<key>
\begin_inset Quotes erd
\end_inset

 but 
\begin_inset Quotes eld
\end_inset

CTRL+<key>
\begin_inset Quotes erd
\end_inset

, instead.
 You will also be able to use menu navigation shortcuts by pressing 
\begin_inset Quotes eld
\end_inset

Alt+<underlined letter>
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The current Ai2 version is working good enough for me but sextante 0.6 in
 it will be a plus.
 In the Ai2 version I get into trouble with large (+2 Gb) ecw files and
 I can't load ecwp services, just in case you want to take a look to that
 ecwp://195.235.91.52
\backslash
ortofotos
\backslash
033001.ecw
\end_layout

\end_inset


\end_layout

\begin_layout Section
RGK Edition
\end_layout

\begin_layout Itemize
Logo for Quick Print function.
\end_layout

\begin_layout Itemize
German translation.
\end_layout

\begin_layout Section
Future Releases
\end_layout

\begin_layout Subsection
Release OADE 2010 1.1
\end_layout

\begin_layout Subsubsection
Better Mac Support
\end_layout

\begin_layout Standard
preJava is quite good except that it displays a default Java icon and com.iver.and
ami.Laucher in the Mac menu bar.
 This could be prevented by creating a dynamic Info.plist out of preJava
 and then launching JavaApplicationStub.
 The code for this is already in preJava and it works.
 HOWEVER: OS X's Info.plist parsing messes up when -D option values have
 whitespace (this could easily be the case if the user sets GVSIG_CONF_DIR).
 So it's not an option.
\end_layout

\begin_layout Standard
-> only way out is to write a complete launcher in C that takes care of
 everything like a regular Mac OS X App does.
\end_layout

\begin_layout Standard
Fix .gvp file association with shell launcher: the Mac desktop passes something
 strange to the script, not the actual name of the file that the user double-cli
cked on.
\end_layout

\begin_layout Subsubsection
More extensions
\end_layout

\begin_layout Standard
How to find extensions:
\end_layout

\begin_layout Enumerate
Go here 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.osor.eu/projects
\end_layout

\end_inset

, then search for 
\begin_inset Quotes eld
\end_inset

gvSIG
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
Browse the repositories on gvsig.org: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.gvsig.org/web/home/projects/contrib/
\end_layout

\end_inset

, 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.gvsig.org/web/plugins/downloads
\end_layout

\end_inset

 and 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://gvsig.org/web/projects/gvsig-desktop/devel
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Evaluate the following for inclusion:
\end_layout

\begin_layout Paragraph
3D Extension
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://gvsig.org/web/projects/gvsig-desktop/devel
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Careful: there may be problems with all the binaries it ships with.
\end_layout

\begin_layout Standard
It installs a lot of additional native binaries and when installed over
 the current OADE binaries, it simply crashes somewhere in the JNI code.
 Restoring the OADE binaries over the ones from the 3D extension did not
 help.
 Most likely, all the additional binary dependencies will have to be recompiled
 for all platforms.
\end_layout

\begin_layout Paragraph
\begin_inset Quotes eld
\end_inset

Munich Extension
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
To be delivered for 1.9.1 in September: 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.osor.eu/projects/gvsig-munich
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Some of the components are already available as individual builds:
\end_layout

\begin_layout Paragraph
Consecutive-numbers
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.osor.eu/projects/gvsig-consecnum
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Adds a new function 
\begin_inset Quotes eld
\end_inset

rec
\begin_inset Quotes erd
\end_inset

 to the field calculator, which can be used to create things like number
 sequences.
\end_layout

\begin_layout Paragraph
Copy-paste-geometries
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.osor.eu/projects/gvsig-copygeom
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Seems to work well for Shapefiles, but throws ugly errors on PostGIS layers.
\end_layout

\begin_layout Paragraph
Select-duplicates
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.osor.eu/projects/gvsig-selduplic
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This tool seems to work; a field of a table needs to be activated first.
\end_layout

\begin_layout Paragraph

\series bold
graphlegend
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.osor.eu/projects/gvsig-graphlege
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Draws bar and pie chart type thematic maps.
\end_layout

\begin_layout Standard
Apart from some GUI-uglyness, this one seems to work well.
\end_layout

\begin_layout Standard
NOTE: There is also a copy of this in the gvSIG SVN (trunk) but the one
 at the URL above seems more recent.
\end_layout

\begin_layout Paragraph
tableimage
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.osor.eu/projects/gvsig-tableimag
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Exports a displayed table as PNG file (like a screenshot).
 Hard to see a use for this.
 Seems to have been part of 
\begin_inset Quotes eld
\end_inset

graphlegend
\begin_inset Quotes erd
\end_inset

 originally, but is now a separat project.
\end_layout

\begin_layout Paragraph
Advanced Visualization
\end_layout

\begin_layout Standard
(Visualizacion avanzada)
\end_layout

\begin_layout Standard
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.gvsig.org/web/plugins/downloads/visualizacionavanzada
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Almost stable enough.
 But needs translations and one bug fix: Java errors get thrown when enabling
 the zoom tool on a layer that is in editing mode.
 
\end_layout

\begin_layout Standard
Also: update the icon to be in line with the other document type icons.
\end_layout

\begin_layout Paragraph
Publish Extension
\end_layout

\begin_layout Standard
Is reportedly being migrated to 1.9 now\SpecialChar \ldots{}

\end_layout

\begin_layout Subsubsection
Raster Tools
\end_layout

\begin_layout Standard
Provide main menu bar entries for all Raster and Remote Sensing Tools.
\end_layout

\begin_layout Standard
Replace those 
\begin_inset Quotes eld
\end_inset

Cancel
\begin_inset Quotes erd
\end_inset

 buttons with 
\begin_inset Quotes eld
\end_inset

Reset
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

Undo
\begin_inset Quotes erd
\end_inset

: Filters, Radiometric enhancement, [DONE]
\end_layout

\begin_layout Subsubsection
Remote Sensing Extension
\end_layout

\begin_layout Standard
Stabilize Raster Calculator and Decision Tree tools so they can be included
 in the distribution.
\end_layout

\begin_layout Subsection
Release OADE 2010.1.X
\end_layout

\begin_layout Standard
Switch to open source InstallJammer
\end_layout

\begin_layout Standard
Support for images from PhoToPlan.
\end_layout

\begin_layout Standard
Deliver with external OGR2GUI.
\end_layout

\begin_layout Section
DEV Notes
\end_layout

\begin_layout Standard
Problems with Eclipse?
\end_layout

\begin_layout Standard
Getting 
\begin_inset Quotes eld
\end_inset

Building MANIFEST-only jar
\begin_inset Quotes erd
\end_inset

 messages? And unresolved symbols as a result?
\end_layout

\begin_layout LyX-Code
eclipse -clean
\end_layout

\begin_layout Standard
-- as often as it takes!
\end_layout

\begin_layout Subsection
Icons
\end_layout

\begin_layout Standard
extension org.gvsig.iconThemeBase has all the built-in icons!
\end_layout

\begin_layout Subsection
Translation
\end_layout

\begin_layout Standard
All strings imported via the i18n extension will end up in the .properties
 files in com.iver.cit.gvsig/! 
\end_layout

\begin_layout Standard
The extensions' local properties files will not be touched! So for updating
 language, just copy files from com.iver.cit.gvsig!]
\end_layout

\begin_layout Standard
Andami strings have to be in .properties files that are saved in the same
 directory as andami.jar
\end_layout

\begin_layout Subsection
Extensions
\end_layout

\begin_layout Standard
CAREFUL! If an extension directory and a config.xml file for an extension
 that does not actually exist gets copied into the "extensiones" dir, then
 Andami will silently crash on start-up!
\end_layout

\begin_layout Standard
ALL EXTENSIONS MUST COMPILE WITHOUT ANY ERRORS!!! Otherwise, there will
 be run-time errors!!!
\end_layout

\begin_layout Standard
In some cases, the extensions' individual build.xml files have to be run
 to produce and copy all the needed JAR files.
\end_layout

\begin_layout Subsubsection
Metadata Extension
\end_layout

\begin_layout Standard
This has an undefined classpath variable "GVSIG_INSTALL_DIR".
 To define it:
\end_layout

\begin_layout Enumerate
Open the "Properties" page for the project "extMetadata"
\end_layout

\begin_layout Enumerate
Go to "Java Build Path -> Libraries"
\end_layout

\begin_layout Enumerate
Click "Add Variable"
\end_layout

\begin_layout Enumerate
Click "Configure Variables" -> this will take you to the appropriate Preferences
 page
\end_layout

\begin_layout Enumerate
Click "New" and add (point to gvSIG INSTALLATION dir):
\end_layout

\begin_deeper
\begin_layout LyX-Code
GVSIG_INSTALL_DIR = /home/benni/gvSIG_1.9
\end_layout

\end_deeper
\begin_layout Standard
The Ant build.xml installs the JAR in a strange location.
 Run it and observer where it puts it
\end_layout

\begin_layout Standard
Depends on libTools, copy into GVSIG_INSTALL_DIR/bin/lib/org.gvsig.tools.jar
\end_layout

\begin_layout Standard
Works only on Shapefiles
\end_layout

\begin_layout Standard
Currently only makes gvSIG crash when opening the "Properties" for a vector
 layer.
 No visible tools.
\end_layout

\end_body
\end_document
