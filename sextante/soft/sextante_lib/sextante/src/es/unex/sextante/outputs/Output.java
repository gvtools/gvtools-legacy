package es.unex.sextante.outputs;

/**
 * This class defines a generic output object Output objects are contained in an {@link es.unex.sextante.core.OutputObjectsSet}
 * and used to define the outputs generated by a geoalgorithm, and also to hold them once the algorithm has created them
 * 
 * @author Victor Olaya volaya@unex.es
 * 
 */
public abstract class Output {

   /**
    * the name of the output, used to identify it internally
    */
   private String           m_sName;

   /**
    * a description of the output
    */
   private String           m_sDescription;

   /**
    * the filename associated with this output. Not all outputs must, however, use this
    */
   protected IOutputChannel m_OutputChannel;

   /**
    * The output value itself
    */
   protected Object         m_Object;


   /**
    * 
    * @return a new instance of the output object
    */
   public Output getNewInstance() {

      final Class cl = this.getClass();
      Output ret;

      try {
         ret = (Output) cl.newInstance();

         ret.setName(m_sName);
         ret.setDescription(m_sDescription);
         ret.setOutputObject(m_Object);
         ret.setOutputChannel(m_OutputChannel);

         return ret;
      }
      catch (final Exception e) {
         return null;
      }

   }


   /**
    * Returns the name of the object
    * 
    * @return the name of the object
    */
   public String getName() {
      return m_sName;
   }


   /**
    * Sets a new name for the output object
    * 
    * @param name
    *                the new name for the output object
    */
   public void setName(final String name) {
      m_sName = name;
   }


   /**
    * Returns the description of the output object
    * 
    * @return the description of the output object
    */
   public String getDescription() {
      return m_sDescription;
   }


   /**
    * Sets a new description for the output object
    * 
    * @param description
    *                the new description for the output object
    */
   public void setDescription(final String description) {
      m_sDescription = description;
   }


   /**
    * Returns the value of the output object
    * 
    * @return the value of the output object
    */
   public Object getOutputObject() {
      return m_Object;
   }


   /**
    * Sets a new value for the output object
    * 
    * @param object
    *                the new value for the output object
    */
   public abstract void setOutputObject(Object object);


   /**
    * Returns the output channel associated with the output object
    * 
    * @return the output channel associated with the output object
    */
   public IOutputChannel getOutputChannel() {

      return m_OutputChannel;

   }


   /**
    * Sets a new output channel associated with this output object
    * 
    * @param channel
    *                the new output channel associated with this output object
    */
   public void setOutputChannel(final IOutputChannel channel) {

      m_OutputChannel = channel;

   }


   /**
    * Returns the output as a command-line parameter
    * 
    * @return the output as a string, to save it as a command-line parameter
    */
   public abstract String getCommandLineParameter();


   /**
    * Sets the data objects (output channel, name, output object, etc) of this objects from another Output object
    * 
    * @param output
    *                the Output object to take data from
    */
   public void setObjectData(final Output output) {

      setDescription(output.getDescription());
      setOutputChannel(output.getOutputChannel());
      setOutputObject(output.getOutputObject());

   }


   /**
    * returns a human-readable description of the type of output
    * 
    * @return a human-readable description of the type of output
    */
   public abstract String getTypeDescription();

}
